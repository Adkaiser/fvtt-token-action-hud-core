const t={ID:"token-action-hud-core",NAME:"Token Action HUD"},e="|",i={UTILITY:"utility"},n=["JournalEntry","Macro","RollTable","Playlist"],o=["compendiumEntry","compendiumMacro","compendiumPlaylist","macro"],s={CATEGORY:"category",SUBCATEGORY:"subcategory",ACTION:"action"},a={COMPENDIUM:"compendium",CUSTOM:"custom",SYSTEM:"system",SYSTEM_DERIVED:"system-derived"};class Logger{static info(t,e=!1){console.log(`Token Action HUD Info | ${t}`),e&&ui.notifications.info(`Token Action HUD | ${t}`)}static error(t,e=!1){console.error(`Token Action HUD Error | ${t}`),e&&ui.notifications.error(`Token Action HUD | ${t}`)}static debug(t,e){if(game.tokenActionHud?game.tokenActionHud.isDebug:Utils.getSetting("debug")){if(!e)return void console.log(`Token Action HUD Debug | ${t}`);const i=Utils.deepClone(e);console.log(`Token Action HUD Debug | ${t}`,i)}}}class Timer{contructor(t){this.milliseconds=t,this.timer=null}async start(){return this.timer&&this.abort(),new Promise((t=>{this.timer=setTimeout(t,this.milliseconds)}))}async abort(){clearTimeout(this.timer),this.timer=null}}class Utils{static checkAllow(t){return t>=this.getSetting("allow")}static deepClone(t,e){return deepClone(t,e)}static getActor(t,e){let i=null;return e&&(i=canvas.tokens.placeables.find((t=>t.id===e))),i?i.actor:game.actors.get(t)}static getImage(t,e=[]){e.push("icons/svg/mystery-man.svg");let i="";return this.displayIcons&&(i=t?.img??t?.icon??""),e.includes(i)?"":i}static getItem(t,e){return t.items.get(e)}static getToken(t){return canvas.tokens.placeables.find((e=>e.id===t))}static getControlledTokens(){return game.canvas.tokens.controlled}static getFirstControlledTokens(){return game.canvas.tokens.controlled[0]}static getSetting(e,i=null){let n=i??null;try{n=game.settings.get(t.ID,e)}catch{Logger.debug(`Setting '${e}' not found`)}return n}static async setSetting(e,i){game.settings.settings.get(`${t.ID}.${e}`)?(await game.settings.set(t.ID,e,i),Logger.debug(`Setting '${e}' set to '${i}'`)):Logger.debug(`Setting '${e}' not found`)}static getUserFlag(e){return game.user.getFlag(t.ID,e)}static async setUserFlag(e,i){await game.user.setFlag(t.ID,e,i)}static async unsetUserFlag(e){await game.user.unsetFlag(t.ID,e)}static i18n(t){return game.i18n.localize(t)}static isModuleActive(t){const e=game.modules.get(t);return e&&e.active}static getModuleTitle(t){return game.modules.get(t)?.title??""}static switchCSS(e){const i=[{setting:"compact",file:"tah-compact"},{setting:"foundryVTT",file:"tah-foundry-vtt"},{setting:"dorakoUI",file:"tah-dorako"}];for(const n of i){const i=[`modules/${t.ID}/`,`styles/${n.file}`];n.setting===e?Object.values(document.styleSheets).find((t=>t.href?.includes(i[0])&&t.href?.includes(i[1]))).disabled=!1:Object.values(document.styleSheets).find((t=>t.href?.includes(i[0])&&t.href?.includes(i[1]))).disabled=!0}}static registerHandlebars(){Handlebars.registerHelper("cap",(function(t){return!t||t.length<1?"":t[0].toUpperCase()+t.slice(1)}));const reduceOp=function(t,e){(t=Array.from(t)).pop();const i=t.shift();return t.reduce(e,i)};Handlebars.registerHelper({eq:function(){return reduceOp(arguments,((t,e)=>t===e))},ne:function(){return reduceOp(arguments,((t,e)=>t!==e))},lt:function(){return reduceOp(arguments,((t,e)=>t<e))},gt:function(){return reduceOp(arguments,((t,e)=>t>e))},lte:function(){return reduceOp(arguments,((t,e)=>t<=e))},gte:function(){return reduceOp(arguments,((t,e)=>t>=e))},and:function(){return reduceOp(arguments,((t,e)=>t&&e))},or:function(){return reduceOp(arguments,((t,e)=>t||e))},tf:function(){return reduceOp(arguments,(t=>t))}}),Handlebars.registerHelper("activeText",(function(t){return Utils.getSetting("activeCssAsText")?t.fn(this):t.inverse(this)}))}static getModuleVersionParts(t){if(!t)return void Logger.debug("Module version not retrieved",{trigger:"getModuleVersionParts"});const e=t.split(".");return{major:e[0],minor:e[1],patch:e[2]}}static async checkModuleCompatibility(e){const i=this.getModuleVersionParts(e),n=this.getModuleVersionParts(game.modules.get(t.ID).version);return!(n.major!==i.major||n.minor!==i.minor||i.patch&&n.patch!==i.patch)||(ui.notifications.error(`The installed Token Action Hud system module requires Token Action Hud core module version ${e}.`),!1)}static getSubcategories(t,e={}){if(!t)return;const i=e?.id,n=e?.type;t=Array.isArray(t)?t:Object.values(t);let o=[];for(const s of t)if(i&&s.id!==i||n&&s.type!==n||o.push(s),s.subcategories.length>0){const t=this.getSubcategories(s.subcategories,e);t&&(o=o.concat(t.filter((t=>void 0!==t))))}return o.length>0?o:null}static async getSubcategoryByNestId(t,e={}){const i="string"==typeof e?e:e?.nestId,n=e?.type??"system";if(!i)return;const o=i.split("_");return await async function findSubcategory(t,e){t=Array.isArray(t)?t:Object.values(t);for(const i of t)if(i.id===e[0]){if(1===e.length)return i.type&&i.type!==n?void 0:i;if(0===i.subcategories.length)return;e.shift();const t=await findSubcategory(i.subcategories,e);if(t)return t}}(t,o)}}function onChangeFunction(t){game.tokenActionHud&&game.tokenActionHud.updateSettings()}const registerSettings=function(e,i){game.settings.register(t.ID,"startup",{name:"One-Time Startup Prompt",scope:"world",config:!1,type:Boolean,default:!1}),game.settings.register(t.ID,"rollHandler",{name:Utils.i18n("tokenActionHud.settings.rollHandler.name"),hint:Utils.i18n("tokenActionHud.settings.rollHandler.hint"),scope:"world",config:!0,type:String,choices:i,default:"core",onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"style",{name:Utils.i18n("tokenActionHud.settings.style.name"),hint:Utils.i18n("tokenActionHud.settings.style.hint"),scope:"client",config:!0,type:String,default:"foundryVTT",choices:{compact:"Compact",foundryVTT:"Foundry VTT",dorakoUI:"Dorako UI"},onChange:t=>{Utils.switchCSS(t)}}),game.settings.register(t.ID,"direction",{name:Utils.i18n("tokenActionHud.settings.direction.name"),hint:Utils.i18n("tokenActionHud.settings.direction.hint"),scope:"client",config:!0,type:String,default:"down",choices:{up:Utils.i18n("tokenActionHud.settings.direction.choices.up"),down:Utils.i18n("tokenActionHud.settings.direction.choices.down")},onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"scale",{name:Utils.i18n("tokenActionHud.settings.scale.name"),hint:Utils.i18n("tokenActionHud.settings.scale.hint"),scope:"client",config:!0,type:Number,range:{min:.5,max:2,step:.05},default:1,onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"drag",{name:Utils.i18n("tokenActionHud.settings.drag.name"),hint:Utils.i18n("tokenActionHud.settings.drag.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{onChangeFunction()}}),function initColorSettings(){let e=null;game.modules.get("lib-themer")?.active?e="lib-themer":game.modules.get("color-picker")?.active?e="color-picker":game.modules.get("colorsettings")?.active&&(e="colorsettings");switch(e){case"lib-themer":Hooks.once("lib-themer.Ready",(e=>{e.register({id:t.ID,title:game.modules.get(t.ID).title,"--tah-background":{name:"tokenActionHud.settings.background.name",hint:"tokenActionHud.settings.background.hint",type:"color",default:"#00000000"},"--tah-button-background":{name:"tokenActionHud.settings.buttonBackgroundColor.name",hint:"tokenActionHud.settings.buttonBackgroundColor.hint",type:"color",default:"#00000080",colors:{buttons:!0}}})}));break;case"color-picker":"object"==typeof ColorPicker?registerColorSettings(e):Hooks.once("colorPickerReady",(()=>{registerColorSettings(e)}));break;case"colorsettings":Hooks.once("ready",(()=>{try{window.Ardittristan.ColorSetting.tester,registerColorSettings(e)}catch{}}))}}(),game.settings.register(t.ID,"enable",{name:Utils.i18n("tokenActionHud.settings.enable.name"),hint:Utils.i18n("tokenActionHud.settings.enable.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"allow",{name:Utils.i18n("tokenActionHud.settings.allow.name"),hint:Utils.i18n("tokenActionHud.settings.allow.hint"),scope:"world",config:!0,type:String,choices:{4:Utils.i18n("tokenActionHud.settings.allow.choices.4"),3:Utils.i18n("tokenActionHud.settings.allow.choices.3"),2:Utils.i18n("tokenActionHud.settings.allow.choices.2"),1:Utils.i18n("tokenActionHud.settings.allow.choices.1")},default:1,requiresReload:!0}),game.settings.register(t.ID,"alwaysShowHud",{name:Utils.i18n("tokenActionHud.settings.alwaysShowHud.name"),hint:Utils.i18n("tokenActionHud.settings.alwaysShowHud.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"displayCharacterName",{name:Utils.i18n("tokenActionHud.settings.displayCharacterName.name"),hint:Utils.i18n("tokenActionHud.settings.displayCharacterName.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"displayIcons",{name:Utils.i18n("tokenActionHud.settings.displayIcons.name"),hint:Utils.i18n("tokenActionHud.settings.displayIcons.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"clickOpenCategory",{name:Utils.i18n("tokenActionHud.settings.clickOpenCategory.name"),hint:Utils.i18n("tokenActionHud.settings.clickOpenCategory.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"renderItemOnRightClick",{name:Utils.i18n("tokenActionHud.settings.renderItemOnRightClick.name"),hint:Utils.i18n("tokenActionHud.settings.renderItemOnRightClick.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{onChangeFunction()}}),game.modules.get("itemacro")?.active&&game.settings.register(t.ID,"itemMacro",{name:Utils.i18n("tokenActionHud.settings.itemMacro.name"),hint:Utils.i18n("tokenActionHud.settings.itemMacro.hint"),scope:"client",config:!0,type:String,choices:{both:Utils.i18n("tokenActionHud.settings.itemMacro.choices.both"),itemMacro:Utils.i18n("tokenActionHud.settings.itemMacro.choices.itemMacro"),original:Utils.i18n("tokenActionHud.settings.itemMacro.choices.original")},default:"both",onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"activeCssAsText",{name:Utils.i18n("tokenActionHud.settings.activeCssAsText.name"),hint:Utils.i18n("tokenActionHud.settings.activeCssAsText.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"debug",{name:Utils.i18n("tokenActionHud.settings.debug.name"),hint:Utils.i18n("tokenActionHud.settings.debug.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{onChangeFunction()}}),game.settings.register(t.ID,"reset",{name:Utils.i18n("tokenActionHud.settings.reset.name"),hint:Utils.i18n("tokenActionHud.settings.reset.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{t&&(Utils.setSetting("reset",!1),game.tokenActionHud.reset())}}),e.doRegisterSettings(onChangeFunction),Logger.debug("Available roll handlers",{rollHandlers:i})};function registerColorSettings(e){const i={key:"background",name:Utils.i18n("tokenActionHud.settings.background.name"),hint:Utils.i18n("tokenActionHud.settings.background.hint"),scope:"client",restricted:!1,default:"#00000000",onChange:t=>{document.querySelector(":root").style.setProperty("--tah-background",t),onChangeFunction()}},n={key:"buttonBackgroundColor",name:Utils.i18n("tokenActionHud.settings.buttonBackgroundColor.name"),hint:Utils.i18n("tokenActionHud.settings.buttonBackgroundColor.hint"),scope:"client",restricted:!0,default:"#00000080",onChange:t=>{document.querySelector(":root").style.setProperty("--tah-button-background",t),onChangeFunction()}},o={key:"buttonBorderColor",name:Utils.i18n("tokenActionHud.settings.buttonBorderColor.name"),hint:Utils.i18n("tokenActionHud.settings.buttonBorderColor.hint"),scope:"client",restricted:!0,default:"#000000ff",onChange:t=>{document.querySelector(":root").style.setProperty("--tah-button-outline",t),onChangeFunction()}};if("color-picker"===e){const e={format:"hexa",alphaChannel:!0};ColorPicker.register(t.ID,i.key,{name:i.name,hint:i.hint,scope:i.scope,restricted:i.restricted,default:i.default,onChange:i.onChange},e),ColorPicker.register(t.ID,n.key,{name:n.name,hint:n.hint,scope:n.scope,restricted:n.restricted,default:n.default,onChange:n.onChange},e),ColorPicker.register(t.ID,o.key,{name:o.name,hint:o.hint,scope:o.scope,restricted:o.restricted,default:o.default,onChange:o.onChange},e)}else"colorsettings"===e&&(new window.Ardittristan.ColorSetting(t.ID,i.key,{name:i.name,hint:i.hint,scope:i.scope,restricted:i.restricted,defaultColor:i.default,onChange:i.onChange,insertAfter:`${t.ID}.scale`}),new window.Ardittristan.ColorSetting(t.ID,n.key,{name:n.name,hint:n.hint,scope:n.scope,restricted:n.restricted,defaultColor:n.default,onChange:n.onChange,insertAfter:`${t.ID}.${i.key}`}),new window.Ardittristan.ColorSetting(t.ID,o.key,{name:o.name,hint:o.hint,scope:o.scope,restricted:o.restricted,defaultColor:o.default,onChange:o.onChange,insertAfter:`${t.ID}.${n.key}`}));document.querySelector(":root").style.setProperty("--tah-background",Utils.getSetting("background")??"#00000000"),document.querySelector(":root").style.setProperty("--tah-button-background",Utils.getSetting("buttonBackgroundColor")??"#000000b3"),document.querySelector(":root").style.setProperty("--tah-button-outline",Utils.getSetting("buttonBorderColor")??"#000000ff")}class MigrationManager{constructor(t){this.systemModuleId=t}async init(){await this._migrateUserFlags()}async _migrateUserFlags(){if("token-action-hud-dnd5e"===!this.systemModuleId)return;const t=Utils.getUserFlag("categories");if(t&&!Array.isArray(t))try{const e=`../../${this.systemModuleId}/scripts/defaults.js`,i=await import(e).then((t=>t.DEFAULTS.subcategories)),n=new Map;i.forEach((t=>{n.set(t.id,t)}));const o=await Utils.deepClone(t);function convertCategories(t){const e=[];for(const i in t){const n={...t[i],nestId:i};n.name=n.title.startsWith("DND5E")?Utils.i18n(n.title.replace("DND5E.Item","ITEM.")):n.title,convertSubcategories(n),e.push(n)}return e;function convertSubcategories(t){if(!t.subcategories)return;if(Array.isArray(t.subcategories))return;const e=[];for(const i in t.subcategories){let o=t.subcategories[i];if(n.has(o.id)?o=n.get(o.id):o.name=o.title,o.nestId=i,convertSubcategories(o),"spells"===o.id){const t=o.nestId.substring(0,o.nestId.lastIndexOf("spells")),i=[{...n.get("at-will-spells"),nestId:`${t}at-will-spells`},{...n.get("innate-spells"),nestId:`${t}innate-spells`},{...n.get("pact-spells"),nestId:`${t}pact-spells`},{...n.get("cantrips"),nestId:`${t}cantrips`},{...n.get("1st-level-spells"),nestId:`${t}1st-level-spells`},{...n.get("2nd-level-spells"),nestId:`${t}2nd-level-spells`},{...n.get("3rd-level-spells"),nestId:`${t}3rd-level-spells`},{...n.get("4th-level-spells"),nestId:`${t}4th-level-spells`},{...n.get("5th-level-spells"),nestId:`${t}5th-level-spells`},{...n.get("6th-level-spells"),nestId:`${t}6th-level-spells`},{...n.get("7th-level-spells"),nestId:`${t}7th-level-spells`},{...n.get("8th-level-spells"),nestId:`${t}8th-level-spells`},{...n.get("9th-level-spells"),nestId:`${t}9th-level-spells`}];e.push(...i)}else if("features"===o.id){const t=o.nestId.substring(0,o.nestId.lastIndexOf("features")),i=[{...n.get("active-features"),nestId:`${t}active-features`},{...n.get("passive-features"),nestId:`${t}passive-features`}];e.push(...i)}else e.push(o)}t.subcategories=e}}Logger.info("Migrating user configuration...",!0);const s=convertCategories(o);await Utils.setUserFlag("categories",s),Logger.info("Successfully migrated user configuration",!0)}catch{await Utils.unsetUserFlag("categories"),Logger.error("Failed to migrate user configuration, reverting to default configuration",!0)}}}class TagDialog extends Dialog{i18n=t=>game.i18n.localize(t);tagify=null;dragSort=null;constructor(t,e){super(e),this.data=t,this.categoryId=null,this.subcategoryId=null}static showDialog(e,i,n,o){this.nestId=e,TagDialog._prepareHook(i);const s=Handlebars.compile(`{{> modules/${t.ID}/templates/tagdialog.hbs}}`);new TagDialog({title:n.title,content:s(n.content),buttons:{accept:{icon:'<i class="fas fa-check"></i>',label:game.i18n.localize("tokenActionHud.accept"),callback:async t=>{const e=TagDialog.tagify.value.map((t=>(t.id=t.id??t.value.slugify({replacement:"-",strict:!0}),{id:t.id,name:t.value,type:t.type,level:t.level,hasDerivedSubcategories:t.hasDerivedSubcategories})));await o(e,t)}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("tokenActionHud.cancel")}},default:"accept"}).render(!0)}static _prepareHook(t){Hooks.once("renderTagDialog",((e,i,n)=>{i.css("height","auto");const o=i.find('select[id="token-action-hud-index"]');o.length>0&&(o.css("background","#fff"),o.css("color","#000"));const s=i.find('input[class="token-action-hud-taginput"]');if(s.length>0){const a={delimiters:";",maxTags:"Infinity",dropdown:{maxItems:50,classname:"tags-look",enabled:0,closeOnSelect:!1}};function onDragEnd(t){TagDialog.tagify.updateValueByDOMTags()}t.available&&(a.whitelist=t.available),TagDialog.tagify=new Tagify(s[0],a),TagDialog.dragSort=new DragSort(TagDialog.tagify.DOM.scope,{selector:"."+TagDialog.tagify.settings.classNames.tag,callbacks:{dragEnd:onDragEnd}});const r=$(document).find(".tagify");r.css("background","#fff"),r.css("color","#000"),t.selected&&TagDialog.tagify.addTags(t.selected);i.find('button[class="tags--removeAllBtn"]').on("click",TagDialog.tagify.removeAllTags.bind(TagDialog.tagify))}}))}_onKeyDown(t){if("Escape"===t.key&&!t.target.className.includes("tagify"))return t.preventDefault(),t.stopPropagation(),this.close();if("Enter"===t.key&&this.data.default&&!t.target.className.includes("tagify")){t.preventDefault(),t.stopPropagation();const e=this.data.buttons[this.data.default];return this.submit(e)}}}class TagDialogHelper{static async showCategoryDialog(t){const e={available:[]};e.selected=await t.getSelectedCategoriesAsTagifyEntries();const i={title:Utils.i18n("tokenActionHud.tagDialog.categoryDialogTitle"),content:{topLabel:Utils.i18n("tokenActionHud.tagDialog.categoryDialogDescription"),placeholder:Utils.i18n("tokenActionHud.tagDialog.tagPlaceholder"),clearButtonText:Utils.i18n("tokenActionHud.tagDialog.clearButton"),indexExplanationLabel:Utils.i18n("tokenActionHud.pushLabelExplanation")}};TagDialog.showDialog(null,e,i,(async e=>{await t.saveCategories(e),Hooks.callAll("forceUpdateTokenActionHud")}))}static async showSubcategoryDialog(t,e){const{nestId:i,name:n}=e,o={};o.available=await t.getAvailableSubcategoriesAsTagifyEntries(e),o.selected=await t.getSelectedSubcategoriesAsTagifyEntries(e);const s={title:Utils.i18n("tokenActionHud.tagDialog.subcategoryDialogTitle")+` (${n})`,content:{topLabel:Utils.i18n("tokenActionHud.tagDialog.subcategoryDialogDescription"),placeholder:Utils.i18n("tokenActionHud.tagDialog.tagPlaceholder"),clearButtonText:Utils.i18n("tokenActionHud.tagDialog.clearButton"),advancedCategoryOptions:await t.getAdvancedCategoryOptions(i),level:"category"}};TagDialog.showDialog(i,o,s,(async(i,n)=>{i=i.map((t=>(t.id=t.id??t.name.slugify({replacement:"-",strict:!0}),t.type=t.type??"custom",t.hasDerivedSubcategories=t.hasDerivedSubcategories??"false",{id:t.id,name:t.name,type:t.type,hasDerivedSubcategories:t.hasDerivedSubcategories})));const o={customWidth:parseInt(n.find('input[name="custom-width"]').val()),characterCount:parseInt(n.find('input[name="character-count"]').val())};await t.saveSubcategories(i,o,e),Hooks.callAll("forceUpdateTokenActionHud")}))}static async showActionDialog(t,e,i){const{nestId:n,name:o}=i,s={},a=await e.getAvailableActionsAsTagifyEntries(i),r=await t.getAvailableSubcategoriesAsTagifyEntries(i);s.available=[...a,...r];const c=await e.getSelectedActionsAsTagifyEntries(i),l=await t.getSelectedSubcategoriesAsTagifyEntries(i);s.selected=[...c,...l];const d={title:`${Utils.i18n("tokenActionHud.tagDialog.actionDialogTitle")} (${o})`,content:{topLabel:Utils.i18n("tokenActionHud.tagDialog.actionDialogDescription"),placeholder:Utils.i18n("tokenActionHud.tagDialog.tagPlaceholder"),clearButtonText:Utils.i18n("tokenActionHud.tagDialog.clearButton"),indexExplanationLabel:Utils.i18n("tokenActionHud.blockListLabel"),advancedCategoryOptions:await t.getAdvancedCategoryOptions(n),level:"subcategory"}};TagDialog.showDialog(n,s,d,(async(n,o)=>{const s=[],a=[];for(const t of n)switch(t.level){case"subcategory":s.push(t);break;case"action":a.push(t)}const r={customWidth:parseInt(o.find('input[name="custom-width"]').val()),characterCount:parseInt(o.find('input[name="character-count"]').val())};await t.saveSubcategories(s,r,i),await e.saveActions(a,i),Hooks.callAll("forceUpdateTokenActionHud")}))}}class CategoryResizer{static async resizeCategory(t,e,i){if(!e)return;const n=e.querySelectorAll(".tah-actions");if(0===n.length)return;const o=e.querySelector(".tah-subcategories"),s=e.id.replace("tah-category-",""),a=(await t.getAdvancedCategoryOptions(s))?.customWidth,r=o.getBoundingClientRect(),c=r.height,l=r.top,d=canvas.screenDimensions[1],g=("down"===i?document.querySelector("#ui-bottom"):document.querySelector("#ui-top")).offsetHeight,u="down"===i?d-l-g-10:c+l-g-10,h=u<100?100:u;let m=500;if(a)m=a;else{const t=document.querySelector("#ui-right"),e=canvas.screenDimensions[0],i=getComputedStyle(o),s=Math.ceil(parseFloat(i.paddingLeft)||0)+Math.ceil(parseFloat(i.paddingRight)||0),a=r.left,c=t.clientWidth,l=(c>0?e-c:e)-10-a;let d=0,g=0;for(const t of n){const e=t.querySelectorAll(".tah-action");if(e.length>0){let t=0;e.forEach((e=>{const i=getComputedStyle(e),n=Math.ceil(parseFloat(i.width)+1||0);t+=n})),t>g&&(g=t,d=e.length)}}g+=5*d-5,g+=s;const u=g/d;let h=5;const p=Math.floor(l/u),f=Math.ceil(Math.sqrt(d));f>h&&f<=p&&(h=f),m=u*h,m>l&&(m=l),m<200&&(m=200)}requestAnimationFrame((()=>{Object.assign(o.style,{maxHeight:`${Math.ceil(h)}px`,width:`${m}px`})}))}}class TokenActionHud extends Application{hoveredCategoryId="";defaultHeight=200;defaultWidth=20;defaultLeftPos=150;defaultTopPos=80;defaultScale=1;refreshTimeout=null;rendering=!1;tokens=null;constructor(t){super(),this.systemManager=t,this.direction="down",this.isAlwaysShow=!1,this.isClickOpen=!1,this.isCollapsed=!1,this.isDraggable=!1,this.isEnabled=!1,this.isUnlocked=!1}async init(){this.direction=Utils.getSetting("direction"),this.isAlwaysShow=Utils.getSetting("alwaysShowHud"),this.isClickOpen=Utils.getSetting("clickOpenCategory"),this.isCollapsed=Utils.getUserFlag("isCollapsed"),this.isDebug=Utils.getSetting("debug"),this.isDraggable=Utils.getSetting("drag"),this.isEnabled=this.isHudEnabled(),this.isUnlocked=Utils.getUserFlag("isUnlocked"),await this.systemManager.registerDefaultFlags(),this.categoryManager=await this.systemManager.getCategoryManager(),this.actionHandler=await this.systemManager.getActionHandler(this.categoryManager),this.rollHandler=this.systemManager.getRollHandler()}updateSettings(){Logger.debug("Updating settings..."),this.updateRollHandler(),this.direction=Utils.getSetting("direction"),this.isAlwaysShow=Utils.getSetting("alwaysShowHud"),this.isClickOpen=Utils.getSetting("clickOpenCategory"),this.isDebug=Utils.getSetting("debug"),this.isDraggable=Utils.getSetting("drag"),this.isEnabled=this.isHudEnabled(),this.actionHandler.displayIcons=Utils.getSetting("displayIcons"),Logger.debug("Settings updated");this.update({trigger:{type:"method",name:"TokenActionHud#updateSettings"}})}updateRollHandler(){this.rollHandler=this.systemManager.getRollHandler()}setTokens(t){this.tokens=t}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:`/modules/${t.ID}/templates/template.hbs`,id:"token-action-hud",classes:[],width:this.defaultWidth,height:this.defaultHeight,left:this.defaultLeftPos,top:this.defaultTopPos,scale:this.defaultScale,background:"none",popOut:!1,minimizable:!1,resizable:!1,title:"token-action-hud",dragDrop:[],tabs:[],scrollY:[]})}getScale(){const t=parseFloat(Utils.getSetting("scale"));return t<.5?.5:t>2?2:t}getData(t={}){const e=super.getData();return e.actions=this.actionList,e.id="token-action-hud",e.scale=this.getScale(),e.background=Utils.getSetting("background")??"#00000000",Logger.debug("Application data",{data:e}),e}activateListeners(t){const e={subtitles:t.find(".tah-subtitle"),actions:t.find(".tah-action"),categoriesSection:t.find("#tah-categories"),editCategoriesButton:t.find("#tah-edit-categories"),categories:t.find(".tah-category"),subcategories:t.find(".tah-subcategory"),titleButtons:t.find(".tah-category-button"),buttons:t.find("#tah-buttons"),collapseHudButton:t.find("#tah-collapse-hud"),expandHudButton:t.find("#tah-expand-hud"),unlockButton:t.find("#tah-unlock"),lockButton:t.find("#tah-lock")};this._bindCategoryEvents(e),this._bindActionEvents(e),this._bindEditCategoriesButton(e),this._bindLockUnlockButtons(e),this._bindCollapseExpandButtons(e)}_bindCategoryEvents(t){const closeCategory=t=>{if(game.tokenActionHud.rendering)return;const e=this.isClickOpen?t.currentTarget.parentElement:t.currentTarget;e.classList.remove("hover");const i=e.id;this.clearHoveredCategory(i)},openCategory=t=>{const e=this.isClickOpen?t.currentTarget.parentElement:t.currentTarget;e.classList.add("hover");const i=e.id;this.setHoveredCategory(i),CategoryResizer.resizeCategory(this.categoryManager,e,this.direction)},toggleCategory=e=>{if(e.currentTarget.parentElement.classList.contains("hover"))closeCategory(e);else{for(const e of t.categories)e.classList.remove("hover");openCategory(e)}};t.titleButtons.on("click",(()=>this.bringToTop())),this.isClickOpen?t.titleButtons.on("click",toggleCategory):(t.categories.get().forEach((t=>{t.addEventListener("touchstart",toggleCategory,{passive:!0})})),t.categories.hover(openCategory,closeCategory)),t.titleButtons.on("mousedown",(t=>this.dragEvent(t))),t.titleButtons.get().forEach((t=>{t.addEventListener("touchstart",(t=>this.dragEvent(t)),{passive:!0})}));const openSubcategoryDialog=t=>{const e=t.currentTarget;if(0===e.value.length)return;const i=e.value,n=e.innerText??e.outerText,o=e?.dataset?.type;TagDialogHelper.showSubcategoryDialog(this.categoryManager,{nestId:i,name:n,type:o})};t.titleButtons.on("contextmenu",(t=>{this.isUnlocked&&openSubcategoryDialog(t)}))}_bindActionEvents(t){const handleAction=t=>{let e=t.target;"BUTTON"!==e.tagName&&(e=t.currentTarget.children[0]);const i=e.value;try{this.rollHandler.handleActionEvent(t,i),e.blur()}catch(e){Logger.error(t)}},openActionDialog=t=>{const{id:e,innerText:i,outerText:n,dataset:o}=t.target;if(!e)return;const s=e,a=i||n,r=o?.type,c=o?.hasDerivedSubcategories;TagDialogHelper.showActionDialog(this.categoryManager,this.actionHandler,{nestId:s,name:a,type:r,hasDerivedSubcategories:c})};t.subtitles.on("click contextmenu",(t=>{this.isUnlocked&&openActionDialog(t)})),t.actions.on("click contextmenu",(t=>{t.preventDefault(),handleAction(t)}))}_bindEditCategoriesButton(t){t.editCategoriesButton.on("click",(t=>{t.preventDefault(),t=t||window.event,TagDialogHelper.showCategoryDialog(this.categoryManager)}))}_bindLockUnlockButtons(t){const unlockHud=async(e=null)=>{e&&(e.preventDefault(),e=e||window.event);const i=e?.target||t.unlockButton;$(i).addClass("tah-hidden"),t.lockButton.removeClass("tah-hidden"),t.editCategoriesButton.removeClass("tah-hidden"),t.categories.removeClass("tah-hidden"),t.subcategories.removeClass("tah-hidden"),t.titleButtons.removeClass("disable-edit"),t.subtitles.removeClass("disable-edit"),this.isUnlocked||(await Utils.setUserFlag("isUnlocked",!0),this.isUnlocked=!0)},lockHud=async(e=null)=>{e&&(e.preventDefault(),e=e||window.event);const i=e?.target||t.lockButton;$(i).addClass("tah-hidden"),t.unlockButton.removeClass("tah-hidden"),t.editCategoriesButton.addClass("tah-hidden");for(const e of t.categories){e.getElementsByClassName("tah-action").length>0||$(e).addClass("tah-hidden")}for(const e of t.subcategories){e.getElementsByClassName("tah-action").length>0||$(e).addClass("tah-hidden")}t.titleButtons.addClass("disable-edit"),t.subtitles.addClass("disable-edit"),this.isUnlocked&&(await Utils.setUserFlag("isUnlocked",!1),this.isUnlocked=!1)};this.isUnlocked?unlockHud():lockHud(),t.unlockButton.on("click",(t=>unlockHud(t))),t.lockButton.on("click",(t=>lockHud(t)))}_bindCollapseExpandButtons(t){const collapseHud=(e=null)=>{e&&(e.preventDefault(),e=e||window.event);const i=e?.target||t.collapseHudButton;$(i).addClass("tah-hidden"),t.expandHudButton.removeClass("tah-hidden"),t.categoriesSection.addClass("tah-hidden"),t.buttons.addClass("tah-hidden"),this.isCollapsed||(Utils.setUserFlag("isCollapsed",!0),this.isCollapsed=!0)},expandHud=e=>{e.preventDefault(),e=e||window.event,$(e.target).addClass("tah-hidden"),t.collapseHudButton.removeClass("tah-hidden"),t.categoriesSection.removeClass("tah-hidden"),t.buttons.removeClass("tah-hidden"),this.isCollapsed&&(Utils.setUserFlag("isCollapsed",!1),this.isCollapsed=!1)};this.isCollapsed&&collapseHud(),t.collapseHudButton.on("click",(t=>collapseHud(t))),t.expandHudButton.on("click",(t=>expandHud(t))),t.expandHudButton.on("mousedown",(t=>this.dragEvent(t))),t.expandHudButton.get(0).addEventListener("touchstart",(t=>this.dragEvent(t)),{passive:!0})}dragEvent(t){if(!this.isDraggable)return;const e=document.getElementById("token-action-hud"),i=t.clientX??t.changedTouches[0].clientX,n=t.clientY??t.changedTouches[0].clientY;let o=0,s=0,a=i,r=n;const c=e.offsetTop,l=e.offsetLeft;let d=c,g=l;const mouseMoveEvent=t=>{const i=t.clientX??t.changedTouches[0].clientX,n=t.clientY??t.changedTouches[0].clientY;o=a-i,s=r-n,a=i,r=n,o===a&&s===r||(d-=s,g-=o,requestAnimationFrame((()=>{Object.assign(e.style,{left:`${g}px`,position:"fixed",top:`${d}px`})})))},mouseUpEvent=()=>{document.onmousemove=null,e.ontouchmove=null,document.onmouseup=null,e.ontouchend=null,d===c&&g===l||(Utils.setUserFlag("position",{top:d,left:g}),Logger.debug(`Set position to x: ${d}px, y: ${g}px`))};document.onmousemove=mouseMoveEvent,e.ontouchmove=mouseMoveEvent,document.onmouseup=mouseUpEvent,e.ontouchend=mouseUpEvent}applySettings(){"up"===Utils.getSetting("direction")&&($(document).find(".tah-subcategories-wrapper").removeClass("expand-down"),$(document).find(".tah-subcategories-wrapper").addClass("expand-up"),$(document).find("#tah-character-name").addClass("tah-hidden"))}setPosition(){if(!this.actionList)return;const t=$(document).find("#tah-character-name");t.length>0&&t.css("top",-t[0].getBoundingClientRect().height),canvas?.tokens?.placeables.find((t=>t.id===this.actionList?.tokenId)),this.setPositionFromFlag(),this.restoreHoveredCategoryState(),this.rendering=!1}setPositionFromFlag(){const t=Utils.getUserFlag("position");if(!t)return;const e=this.defaultLeftPos,i=this.defaultTopPos;return new Promise((n=>{!function check(){const o=document.getElementById("token-action-hud");o?(o.style.bottom=null,o.style.top=t.top<5||t.top>window.innerHeight+5?i+"px":t.top+"px",o.style.left=t.left<5||t.left>window.innerWidth+5?e+"px":t.left+"px",o.style.position="fixed",n()):setTimeout(check,30)}()}))}setPositionFromToken(t){return new Promise((e=>{!function check(t){const i=$("#token-action-hud");i?(i.css("bottom",null),i.css("left",t.worldTransform.tx+(t.width*canvas.dimensions.size+55)*canvas.scene._viewPosition.scale+"px"),i.css("top",t.worldTransform.ty+0+"px"),i.css("position","fixed"),e()):setTimeout(check,30)}(t)}))}async resetPosition(){Logger.debug("Resetting position..."),await Utils.setUserFlag("position",{top:this.defaultTopPos,left:this.defaultLeftPos}),Logger.debug(`Position reset to x: ${this.defaultTopPos}px, y: ${this.defaultLeftPos}px`)}setHoveredCategory(t){this.hoveredCategoryId=t}clearHoveredCategory(t){this.hoveredCategoryId===t&&(this.hoveredCategoryId="")}restoreHoveredCategoryState(){if(""===this.hoveredCategoryId)return;const t=`#${this.hoveredCategoryId}`,e=$(t);if(e[0])if(this.isClickOpen){e.find(".tah-category-button")[0].click()}else e.mouseenter()}async reset(){await this.resetUserFlags(),this.resetPosition()}async resetActorFlags(){await this.categoryManager.resetActorFlags();this.update({trigger:{type:"method",name:"TokenActionHud.resetActorFlags"}})}async resetUserFlags(){await this.categoryManager.resetUserFlags(),this.categoryManager.resetCategoryManager(),this.actionHandler.resetActionHandler();this.update({trigger:{type:"method",name:"TokenActionHud.resetUserFlags"}})}update(t=null){this._updateHud(t)}async _updateHud(t){Logger.debug("Updating hud...",t);const e=Utils.getControlledTokens(),i=this._getCharacter(e),n=e.length>1&&!i;return(i||n)&&this.isEnabled?(this.actionList=await this.actionHandler.buildActionList(i),0===this.actionList.length?(this.close(),void Logger.debug("Hud update aborted as action list empty")):(this.rendering=!0,this.render(!0),void Logger.debug("Hud updated"))):(this.close(),void Logger.debug("Hud update aborted as no character(s) found or hud is disabled"))}isValidTokenChange(t,e=null){return!e?.actorData?.flags&&(this.isAlwaysShow?this.isRelevantToken(t)||t.actorId===game.user.character?.id:this.isRelevantToken(t))}isRelevantToken(t){const e=Utils.getControlledTokens();return e?.some((e=>e.id===t.id))||0===e?.length&&canvas?.tokens?.placeables?.some((t=>t.id===this.actionList?.tokenId))}isValidActorOrItemUpdate(t,e){return e?.flags?(Logger.debug("Flags set, do not update hud",{actor:t,data:e}),!1):t?t?this.actionList&&t.id===this.actionList.actorId?(Logger.debug("Same actor, update hud",{actor:t,data:e}),!0):(Logger.debug("Different actor, do not update hud",{actor:t,data:e}),!1):(Logger.debug("No actor, update hud",{data:e}),!0):void 0}isHudEnabled(){const t=game.user.role,e=game.user.isGM;return!!Utils.getSetting("enable")&&(!!e||Utils.checkAllow(t))}isLinkedCompendium(t){return Logger.debug("Compendium hook triggered, checking if compendium is linked..."),this.categoryManager.isLinkedCompendium(t)}_getCharacter(t=[]){if(t.length>1)return null;const e={token:null,actor:null};if(1===t.length){const i=t[0],n=i.actor;if(!this._isValidCharacter(i))return null;e.token=i,e.actor=n}else 0===t.length&&game.user.character&&this.isAlwaysShow&&(e.actor=game.user.character,e.token=canvas.tokens.placeables.find((t=>t.actor?.id===e.actor.id)));return e.actor?(e.id=e.token?.id??e.actor.id,e.name=e.token?.name??e.actor.name,e):null}_isValidCharacter(t=""){const e=t.actor,i=game.user;return game.user.isGM||e?.testUserPermission(i,"OWNER")}}let r,c=!1;const l=new Timer(20);Hooks.on("tokenActionHudSystemReady",(async e=>{if(!await Utils.checkModuleCompatibility(e.api.requiredCoreModuleVersion))return;r=new e.api.SystemManager(t.ID),r.registerSettings();const i=new MigrationManager(e.id);await i.init(),Utils.switchCSS(Utils.getSetting("style")),Utils.registerHandlebars(),loadTemplates([`modules/${t.ID}/templates/category.hbs`,`modules/${t.ID}/templates/subcategory.hbs`,`modules/${t.ID}/templates/action.hbs`,`modules/${t.ID}/templates/tagdialog.hbs`]),Hooks.callAll("tokenActionHudCoreReady")})),Hooks.on("canvasReady",(async()=>{Hooks.on("tokenActionHudCoreReady",(async()=>{if(game.user.isGM&&!game.modules.get("lib-themer")?.active&&!game.modules.get("color-picker")?.active&&!game.modules.get("colorsettings")?.active){!1===Utils.getSetting("startup")&&(ui.notifications.notify("Token Action Hud: To set colors within this module's settings, install and enable one of the following 'Color Picker', 'Color Settings' or 'libThemer' modules."),Utils.setSetting("startup",!0))}game.tokenActionHud||(game.tokenActionHud=new TokenActionHud(r),await game.tokenActionHud.init()),game.tokenActionHud.setTokens(canvas.tokens),Hooks.on("controlToken",(async(e,i)=>{c&&await l.abort(),c=!0,await l.start(),c=!1;const n=game.tokenActionHud.actionHandler.actorId;Utils.getControlledTokens()?.length??0?n!==e.document.actor.id?game.tokenActionHud.update(t):game.tokenActionHud.render(!0):game.user.character?n!==game.user.character?.id?game.tokenActionHud.update(t):game.tokenActionHud.rendered||game.tokenActionHud.render(!0):game.tokenActionHud.rendered&&game.tokenActionHud.close()})),Hooks.on("updateToken",((t,e,i)=>{if(!Object.hasOwn(i,"y")&&!Object.hasOwn("diff","x")&&game.tokenActionHud.isValidTokenChange(t,e)){const n={trigger:{type:"hook",name:"updateToken",data:[t,e,i]}};game.tokenActionHud.update(n)}})),Hooks.on("deleteToken",((t,e,i,n)=>{if(game.tokenActionHud.isValidTokenChange(e)){const o={trigger:{type:"hook",name:"deleteToken",data:[t,e,i,n]}};game.tokenActionHud.update(o)}})),Hooks.on("updateActor",((t,e)=>{if(game.tokenActionHud.isValidActorOrItemUpdate(t,e)){const i={trigger:{type:"hook",name:"updateActor",data:[t,e]}};game.tokenActionHud.update(i)}})),Hooks.on("deleteActor",((t,e)=>{if(game.tokenActionHud.isValidActorOrItemUpdate(t,e)){const i={trigger:{type:"hook",name:"deleteActor",data:[t,e]}};game.tokenActionHud.update(i)}})),Hooks.on("deleteItem",(t=>{const e=t.actor;if(game.tokenActionHud.isValidActorOrItemUpdate(e)){const e={trigger:{type:"hook",name:"deleteItem",data:[t]}};game.tokenActionHud.update(e)}})),Hooks.on("createItem",(t=>{const e=t.actor;if(game.tokenActionHud.isValidActorOrItemUpdate(e)){const e={trigger:{type:"hook",name:"createItem",data:[t]}};game.tokenActionHud.update(e)}})),Hooks.on("updateItem",(t=>{const e=t.actor;if(game.tokenActionHud.isValidActorOrItemUpdate(e)){const e={trigger:{type:"hook",name:"updateItem",data:[t]}};game.tokenActionHud.update(e)}})),Hooks.on("renderTokenActionHud",(()=>{game.tokenActionHud.applySettings()})),Hooks.on("renderCompendium",((t,e)=>{const i=t?.metadata;if(game.tokenActionHud.isLinkedCompendium(`${i?.package}.${i?.name}`)){const i={trigger:{type:"hook",name:"renderCompendium",data:[t,e]}};game.tokenActionHud.update(i)}})),Hooks.on("deleteCompendium",((t,e)=>{const i=t?.metadata;if(game.tokenActionHud.isLinkedCompendium(`${i?.package}.${i?.name}`)){const i={trigger:{type:"hook",name:"deleteCompendium",data:[t,e]}};game.tokenActionHud.update(i)}})),Hooks.on("createCombat",(t=>{const e={trigger:{type:"hook",name:"createCombat",data:[t]}};game.tokenActionHud.update(e)})),Hooks.on("deleteCombat",(t=>{const e={trigger:{type:"hook",name:"deleteCombat",data:[t]}};game.tokenActionHud.update(e)})),Hooks.on("updateCombat",(t=>{const e={trigger:{type:"hook",name:"updateCombat",data:[t]}};game.tokenActionHud.update(e)})),Hooks.on("updateCombatant",((t,e)=>{const i={trigger:{type:"hook",name:"updateCombatant",data:[t,e]}};game.tokenActionHud.update(i)})),Hooks.on("forceUpdateTokenActionHud",(()=>{game.tokenActionHud.update({trigger:{type:"hook",name:"forceUpdateTokenActionHud"}})})),Hooks.on("createActiveEffect",(()=>{game.tokenActionHud.update({trigger:{type:"hook",name:"createActiveEffect"}})})),Hooks.on("deleteActiveEffect",(()=>{game.tokenActionHud.update({trigger:{type:"hook",name:"deleteActiveEffect"}})}));const t={trigger:{type:"hook",name:"canvasReady"}};game.tokenActionHud.update(t)}))}));class GenericActionHandler{actionHandler;constructor(t){this.actionHandler=t}buildGenericActions(t){this._buildConditions(t),this._buildUtilities(t)}_buildConditions(t){}_buildUtilities(t){if(t)return this._buildSingleTokenUtilities(t);this._buildMultipleTokenUtilities()}_buildSingleTokenUtilities(t){const e=t.actor?.id,n=t.token?.id;if(!n)return;const o=[],s="toggleCombat",r=canvas.tokens.placeables.find((t=>t.id===n)).inCombat?Utils.i18n("tokenActionHud.removeFromCombat"):Utils.i18n("tokenActionHud.addToCombat"),c=[i.UTILITY,e,n,s].join("|"),l={id:s,name:r,encodedValue:c,selected:!0};if(o.push(l),game.user.isGM){const t="toggleVisibility",s=canvas.tokens.placeables.find((t=>t.id===n)).document.hidden?Utils.i18n("tokenActionHud.makeVisible"):Utils.i18n("tokenActionHud.makeInvisible"),a=[i.UTILITY,e,n,t].join("|"),r={id:t,name:s,encodedValue:a,selected:!0};o.push(r)}const d={id:"token",type:a.SYSTEM};this.actionHandler.addActionsToActionList(o,d)}_buildMultipleTokenUtilities(){const t="multi",e="multi",n=Utils.getControlledTokens(),o=[],s="toggleCombat",r=n.every((t=>t.inCombat))?Utils.i18n("tokenActionHud.removeFromCombat"):Utils.i18n("tokenActionHud.addToCombat"),c=[i.UTILITY,t,e,s].join("|"),l={id:s,name:r,encodedValue:c};if(o.push(l),game.user.isGM){const s="toggleVisibility",a=n.every((t=>!t.document.hidden))?Utils.i18n("tokenActionHud.makeVisible"):Utils.i18n("tokenActionHud.makeInvisible"),r=[i.UTILITY,t,e,s].join("|"),c={id:s,name:a,encodedValue:r};o.push(c)}const d={id:"token",type:a.SYSTEM};this.actionHandler.addActionsToActionList(o,d)}}class CompendiumActionHandler{actionHandler;constructor(t){this.actionHandler=t,this.categoryManager=t.categoryManager}async buildCompendiumActions(){const t="compendium",e=this.categoryManager.getFlattenedSubcategories({type:t}).flatMap((t=>t.id));if(!e)return;const i=game.packs.filter((t=>n.includes(t.documentName))).filter((t=>game.user.isGM||!t.private)).map((t=>t.metadata.id));for(const n of i){const i={id:n.replace(".","-"),type:t};if(e.includes(n.replace(".","-"))){const t=await this._getCompendiumActions(n);this.actionHandler.addActionsToActionList(t,i)}}}async _getCompendiumActions(t){const e=await this.getCompendiumEntries(t),i=this.getCompendiumActionType(t);return e.map((e=>({id:e._id,name:e.name,encodedValue:[i,t,e._id].join("|"),img:Utils.getImage(e),selected:!0})))}async getCompendiumEntries(t){const e=game.packs.get(t);if(!e)return[];const i=e.index.size>0?e.index:await e.getIndex();if("Playlist"===e.documentName){return await this._getPlaylistEntries(e)}return i}async _getPlaylistEntries(t){return(await t.getContent()).reduce(((t,e)=>(e.sounds.forEach((i=>{t.push({_id:`${e._id}>${i._id}`,name:i.name})})),t)),[])}getCompendiumActionType(t){const e=game?.packs?.get(t);if(!e)return"";switch(e.documentName){case"Macro":return"compendiumMacro";case"Playlist":return"compendiumPlaylist";default:return"compendiumEntry"}}}class MacroActionHandler{actionHandler;constructor(t){this.actionHandler=t,this.categoryManager=t.categoryManager}async buildMacroActions(){const t="custom",e=this.categoryManager.getFlattenedSubcategories({type:t}).flatMap((t=>t.id));if(!e)return;const i=await this._getActions();for(const n of e){const e={id:n,type:t};this.actionHandler.addActionsToActionList(i,e)}}async _getActions(){const t="macro";return game.macros.filter((t=>{const e=t.ownership;return e[game.userId]?e[game.userId]>0:e.default>0})).map((e=>({id:e.id,name:e.name,encodedValue:[t,e.id].join("|"),img:Utils.getImage(e),selected:!0})))}}class ActionHandler{furtherActionHandlers=[];delimiter="|";constructor(t){this.categoryManager=t,this.flattenedSubcategories=t.flattenedSubcategories,this.character=null,this.genericActionHandler=new GenericActionHandler(this),this.compendiumActionHandler=new CompendiumActionHandler(this),this.macroActionHandler=new MacroActionHandler(this),this.actionList=[],this.userActionList=[],this.savedUserActionList=[],this.savedActorActionList=[],this.displayIcons=Utils.getSetting("displayIcons")}resetActionHandler(){this.genericActionHandler=new GenericActionHandler(this),this.compendiumActionHandler=new CompendiumActionHandler(this),this.macroActionHandler=new MacroActionHandler(this),this.actionList=[],this.userActionList=[],this.savedUserActionList=[],this.savedActorActionList=[],this.displayIcons=Utils.getSetting("displayIcons")}async buildActionList(t){return Logger.debug("Building action list...",{character:t}),await this.categoryManager.resetCategoryManager(),this.character=t,this.savedUserActionList=await this._getSavedUserActionList(t),this.character&&(this.savedActorActionList=await this._getSavedActorActionList(t)),this.actionList=await this._buildEmptyActionList(t),await this.categoryManager.flattenSubcategories(this.actionList),await Promise.all([this._buildSystemActions(t),this._buildGenericActions(t),this._buildCompendiumActions(),this._buildMacroActions()]),await this.buildFurtherActions(t),await this.categoryManager.saveDerivedSubcategories(),await this._setCharacterLimit(),this.character&&await this._saveActorActionList(t),Logger.debug("Action list built",{actionList:this.actionList,character:t}),this.actionList}_getSavedUserActionList(t){Logger.debug("Retrieving saved action list from user...",{character:t});const e=Utils.getUserFlag("categories");if(!e)return[];const i=Utils.deepClone(e);return Logger.debug("Action list from user retrieved",{savedUserActionList:i,character:t}),i}_getSavedActorActionList(e){Logger.debug("Retrieving saved action list from actor...",{character:e});const i=e?.actor;if(!i)return[];const n=i.getFlag(t.ID,"categories");if(!n)return[];const o=Utils.deepClone(n);return Logger.debug("Action list from actor retrieved",{savedActorActionList:o,character:e}),o}_buildEmptyActionList(t){Logger.debug("Building empty action list...",{character:t});let e="";Utils.getSetting("displayCharacterName")&&(e=t?.name??"Multiple");const i={hudTitle:e,tokenId:t?.token?.id??"multi",actorId:t?.actor?.id??"multi",categories:[]},n=this.savedUserActionList?.length?this.savedUserActionList:Utils.getUserFlag("default.categories");for(const t of n){i.categories.push(this.categoryManager.createCategory(t));const e=i.categories.length-1,n=i.categories[e],addSubcategories=(t,e)=>{if(e)for(const i of e)if(t.subcategories.push(this.categoryManager.createSubcategory(i)),i?.subcategories?.length){const e=t.subcategories.length-1,n=t.subcategories[e];addSubcategories(n,i.subcategories)}};addSubcategories(n,t.subcategories,t.nestId)}return Logger.debug("Empty action list built",{emptyActionList:i,character:t}),i}async _buildSystemActions(t){Logger.debug("Building system actions...",{character:t});const e=this.categoryManager.getFlattenedSubcategories({level:"subcategory"}).map((t=>t.id));await this.buildSystemActions(t,e),Logger.debug("System actions built",{actionList:this.actionList,character:t})}async buildSystemActions(t,e){}_buildGenericActions(t){Logger.debug("Building generic actions...",{character:t}),this.genericActionHandler.buildGenericActions(t),Logger.debug("Generic actions built",{actionList:this.actionList,character:t})}async _buildCompendiumActions(){Logger.debug("Building compendium actions..."),await this.compendiumActionHandler.buildCompendiumActions(),Logger.debug("Compendium actions built",{actionList:this.actionList})}async _buildMacroActions(){Logger.debug("Building macro actions..."),await this.macroActionHandler.buildMacroActions(),Logger.debug("Macro actions built",{actionList:this.actionList})}async buildFurtherActions(t){this.furtherActionHandlers.forEach((e=>e.extendActionList(t)))}async getAvailableActionsAsTagifyEntries(t){if(!this.actionList)return;return(await Utils.getSubcategoryByNestId(this.actionList.categories,t)).actions.map((t=>this._toTagifyEntry(t)))}async getSelectedActionsAsTagifyEntries(t){if(!this.actionList)return;return(await Utils.getSubcategoryByNestId(this.actionList.categories,t)).actions.filter((t=>!0===t.selected)).map((t=>this._toTagifyEntry(t)))}async registerDefaultCategories(){}addSubcategoryInfo(t){const e=t?.id,i=t?.info;if(!e||!i)return;this.categoryManager.getFlattenedSubcategories(t).forEach((t=>{t.info1=i.info1,t.info2=i.info2,t.info3=i.info3}))}async addSubcategoryToActionList(t,e){const i=t?.id;if(!i)return;const n=this.categoryManager.getFlattenedSubcategories({...t,level:s.SUBCATEGORY});if(n)for(const i of n){const n=`${i.nestId}_${e.id}`;if(this.categoryManager.getFlattenedSubcategories({...e,nestId:n}).length)continue;const o=this.categoryManager.createSubcategory({...e,nestId:n});i.subcategories.push(o),this.categoryManager.addToFlattenedSubcategories(o),this.categoryManager.addToDerivedSubcategories({...t,nestId:i.nestId},o)}}async addActionsToActionList(t,e){if(!t.length)return;if(!e?.id)return;const i=this.categoryManager.getFlattenedSubcategories(e);if(i)for(const e of i){const i=e.nestId,n=e.type,o=(await Utils.getSubcategoryByNestId(this.savedActorActionList,{nestId:i,type:n}))?.actions??[],s=[];for(const e of o){const i=t.find((t=>t.encodedValue===e.encodedValue));if(i){const t={...i,fullName:i.name,selected:e.selected??!0};s.push(t)}}for(const e of t){if(!o.find((t=>t.encodedValue===e.encodedValue))){const t={...e,fullName:e.name,selected:!0};s.push(t)}}e.actions=s}}async _setCharacterLimit(){const t=this.categoryManager.getFlattenedSubcategories({level:"category"});for(const e of t){const t=e?.advancedCategoryOptions?.characterCount,i=this.categoryManager.getFlattenedSubcategories({nestId:e.nestId,level:"subcategory"});for(const e of i){const i=e.actions;if(0===i.length)continue;const n=e?.advancedCategoryOptions?.characterCount,o=n>=0?n:t;if((o||0===o)&&o>=0)for(const t of i)t.name.length<=o||(t.name=0!==o?t.name.split(" ").map((t=>t.slice(0,o))).join(" "):"")}}}async _saveActorActionList(e){if(Logger.debug("Saving actor action list...",{character:e}),!e?.actor)return;const i=e.actor,n=Utils.deepClone(this.actionList.categories);await i.setFlag(t.ID,"categories",n),Logger.debug("Actor action list saved",{actionList:this.actionList,character:e})}async saveActions(t,e){const i=await Utils.getSubcategoryByNestId(this.actionList.categories,e),n=i.actions,o=[];for(const e of t){const t=n.find((t=>t.encodedValue===e.id));if(t){const e={...t,selected:!0};o.push(e)}}for(const e of n){if(!t.find((t=>t.id===e.encodedValue))){const t={...e,selected:!1};o.push(t)}}i.actions=o,await this._saveActorActionList(this.character)}addFurtherActionHandler(t){Logger.debug("Adding further action handler...",{handler:t}),this.furtherActionHandlers.push(t)}_toTagifyEntry(t){return{id:t.encodedValue,value:t.fullName,type:"action",level:"action"}}sortItems(t){return new Map([...t.entries()].sort(((t,e)=>t[1].sort.localeCompare(e[1].sort))))}sortItemsByName(t){return new Map([...t.entries()].sort(((t,e)=>t[1].name.localeCompare(e[1].name))))}}class ActionListExtender extends ActionHandler{constructor(t){super(t)}extendActionList(t){}}class ItemMacroActionListExtender extends ActionListExtender{constructor(t){super(t.categoryManager),this.actionHandler=t,this.categoryManager=t.categoryManager}extendActionList(t){if(!t)return;const e=t.token?.id,i=t.actor?.id;if(!i)return;const n=Utils.getActor(i,e).items.filter((t=>t.flags?.itemacro?.macro?.command));let o;if(o=Utils.isModuleActive("midi-qol")?n.filter(this._isUnsupportedByMidiQoL).map((t=>t.id)):n.map((t=>t.id)),!o)return;if(0===o.length)return;const s=Utils.getSetting("itemMacro");if("original"===s)return;const a="itemMacro"===s;this.categoryManager.flattenedSubcategories.forEach((t=>{this._addSubcategoryActions(o,t,a)}))}_addSubcategoryActions(t,e,i){if(!e?.actions?.length)return;const n=[];e.actions.forEach((e=>{if(!t.includes(e.id))return;const o=this._createItemMacroAction(e,i);i||n.push(o)})),this._addActionsToSubcategory(e,n)}_createItemMacroAction(t,e){const i=e?t:Utils.deepClone(t);return i.fullName=`(M) ${i.fullName}`,i.name=`(M) ${i.name}`,i.encodedValue=`itemMacro ${i.encodedValue.substr(i.encodedValue.indexOf("|"))}`,i}_addActionsToSubcategory(t,e){e.forEach((e=>{const i=t.actions.findIndex((t=>t.id===e.id))+1;t.actions.splice(i,0,e)}))}_isUnsupportedByMidiQoL(t){return!t.getFlag("midi-qol","onUseMacroName")}}class RollHandler{preRollHandlers=[];throwInvalidValueErr(t){throw new Error(`Error handling button click: ${t}`)}async handleActionEvent(t,e){Logger.debug(`Handling event for action [${e}]`,{event:t}),this.registerKeyPresses(t);let i=!1;this.preRollHandlers.forEach((n=>{i||(i=n.prehandleActionEvent(t,e))})),i||(this._isMultiGenericAction(e)?await this._doMultiGenericAction(e):this.doHandleActionEvent(t,e))}doHandleActionEvent(t,e){}addPreRollHandler(t){Logger.debug(`Adding pre-roll handler ${t.constructor.name}`),this.preRollHandlers.push(t)}registerKeyPresses(t){this.rightClick=this.isRightClick(t),this.ctrl=this.isCtrl(t),this.alt=this.isAlt(t),this.shift=this.isShift(t)}doRenderItem(t,e,i){const n=Utils.getActor(t,e);Utils.getItem(n,i).sheet.render(!0)}isRenderItem(){return Utils.getSetting("renderItemOnRightClick")&&this.rightClick&&!(this.alt||this.ctrl||this.shift)}isRightClick(t){return 2===t?.originalEvent?.button}isAlt(t){return game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.ALT)}isCtrl(t){return game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.CONTROL)}isShift(t){return game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.SHIFT)}_isMultiGenericAction(t){const e=t.split("|"),i=e[0],n=e[3];return"utility"===i&&n.includes("toggle")}async _doMultiGenericAction(t){const e=t.split("|")[3],i=Utils.getFirstControlledToken();"toggleVisibility"===e&&i.toggleVisibility(),"toggleCombat"===e&&i.toggleCombat(),Hooks.callAll("forceUpdateTokenActionHud")}}class PreRollHandler extends RollHandler{prehandleActionEvent(t,e){return!1}}class CompendiumMacroPreHandler extends PreRollHandler{prehandleActionEvent(t,e){const i=e.split("|");if(i.length<2)return!1;let n=null,s=null,a=null;if(2===i.length&&(n=i[0],a=i[1]),3===i.length&&(n=i[0],s=i[1],a=i[2]),!o.includes(n))return!1;switch(n){case"compendiumEntry":this.handleCompendium(s,a);break;case"compendiumMacro":this.handleMacroCompendium(s,a);break;case"compendiumPlaylist":this.handlePlaylistCompendium(s,a);break;case"macro":this.handleMacro(a);break;default:return!1}return!0}handleCompendium(t,e){game.packs.get(t).getDocument(e).then((t=>t.sheet.render(!0)))}handleMacroCompendium(t,e){game.packs.get(t).getDocument(e).then((t=>t.execute()))}async handlePlaylistCompendium(t,e){const i=game.packs.get(t),n=e.split(">"),o=n[0],s=n[1],a=(await i.getDocument(o)).sounds.find((t=>t._id===s));AudioHelper.play({src:a.path},{})}handleMacro(t){game.macros.find((e=>e.id===t)).execute()}}class ItemMacroPreRollHandler extends PreRollHandler{prehandleActionEvent(t,e){this.registerKeyPresses(t);const i=e.split("|");if(4!==i.length)return!1;const n=i[0],o=i[1],s=i[2],a=i[3];return"itemMacro"===n&&(this.isRenderItem()?(this.doRenderItem(o,s,a),!0):this._tryExecuteItemMacro(t,o,s,a))}_tryExecuteItemMacro(t,e,i,n){const o=Utils.getActor(e,i),s=Utils.getItem(o,n);try{s.executeMacro()}catch(t){return Logger.debug("ItemMacro Error",t),!1}return!0}}class SystemManager{constructor(){this.coreModuleId=t.ID}doGetCategoryManager(){}doGetActionHandler(){}doGetRollHandler(t){}getAvailableRollHandlers(){}doRegisterSettings(t){}async doRegisterDefaultFlags(){}async registerDefaultFlags(){await Utils.unsetUserFlag("default"),await this.doRegisterDefaultFlags()}async getActionHandler(t){const e=this.doGetActionHandler(t);return this.addActionExtenders(e),e}addActionExtenders(t){Utils.isModuleActive("itemacro")&&t.addFurtherActionHandler(new ItemMacroActionListExtender(t))}async getCategoryManager(){const t=this.doGetCategoryManager();return await t.init(),t}getRollHandler(){let t=Utils.getSetting("rollHandler");"core"===t||Utils.isModuleActive(t)||(Logger.error(t,Utils.i18n("tokenActionHud.handlerNotFound")),t="core",Utils.setSetting("rollHandler",t));const e=this.doGetRollHandler(t);return this.addPreHandlers(e),e}addPreHandlers(t){t.addPreRollHandler(new CompendiumMacroPreHandler),Utils.isModuleActive("itemacro")&&t.addPreRollHandler(new ItemMacroPreRollHandler)}registerSettings(){const t=this.getAvailableRollHandlers();registerSettings(this,t)}static addHandler(t,e){if(Utils.isModuleActive(e)){const i=Utils.getModuleTitle(e);mergeObject(t,{[e]:i})}}}class CategoryManager{categories=[];constructor(){this.flattenedSubcategories=[],this.derivedSubcategories=new Map}async resetCategoryManager(){this.flattenedSubcategories=[],this.derivedSubcategories=new Map}async resetActorFlags(){Logger.debug("Resetting actor flags...");const e=game.actors.filter((e=>e.getFlag(t.ID,"categories")));e&&e.forEach((e=>{Logger.debug(`Resetting flags for actor [${e.id}]`,{actor:e}),e.unsetFlag(t.ID,"categories")})),Logger.debug("Actor flags reset")}async resetUserFlags(){Logger.debug("Resetting user flags..."),await Utils.unsetUserFlag("categories"),this.resetCategoryManager(),await this._registerDefaultCategories(),Logger.debug("User flags reset")}async init(){const t=Utils.getUserFlag("categories");if(!t||!t.length)return this._registerDefaultCategories();Logger.debug("Retrieved saved categories",{savedCategories:t})}async _registerDefaultCategories(){const t=Utils.getUserFlag("default.categories");t&&(await Utils.setUserFlag("categories",t),Logger.debug("Registered default categories",{defaultCategories:t}))}createCategory(t){const e=Utils.deepClone(t);return{id:e?.id,nestId:e?.nestId??this.id,name:e?.name,level:s.CATEGORY,advancedCategoryOptions:e?.advancedCategoryOptions??{},cssClass:"",subcategories:[]}}createSubcategory(t){const e=Utils.deepClone(t);return{id:e?.id,nestId:e?.nestId,name:e?.name,type:e?.type??a.CUSTOM,level:s.SUBCATEGORY,advancedCategoryOptions:e?.advancedCategoryOptions??{},hasDerivedSubcategories:e?.hasDerivedSubcategories??!1,isSelected:e?.isSelected??!0,info1:e?.info1??"",info2:e?.info2??"",info3:e?.info3??"",actions:[],subcategories:[]}}flattenSubcategories(t){this.flattenedSubcategories=Utils.getSubcategories(t.categories)}getFlattenedSubcategories(t={}){const e=t.id,i=t.nestId,n=t.type,o=t.level;return this.flattenedSubcategories?this.flattenedSubcategories.filter((t=>(!e||t.id===e)&&(!i||t?.nestId?.startsWith(i))&&(!n||t.type===n)&&(!o||t.level===o))):[]}addToFlattenedSubcategories(t){this.getFlattenedSubcategories(t).length>0||this.flattenedSubcategories.push(t)}async saveCategories(t){if(!t)return;const e=game.tokenActionHud.actionHandler.actionList.categories,i=[];for(const n of t){const t=n.id,o=e.find((e=>e.nestId===t)),s=Utils.deepClone(o?.subcategories)??null;i.push({nestId:n.id,id:n.id,name:n.name,subcategories:s})}i&&await this.saveUserActionList(i)}async saveSubcategories(t,e=null,i){if(!t)return;Logger.debug("Saving subcategories...",{choices:t,advancedCategoryOptions:e,subcategoryData:i});const n=game.tokenActionHud.actionHandler.actionList.categories,o=Utils.deepClone(n),s=await Utils.getSubcategoryByNestId(o,i);if(!s)return;const a=i.nestId,r=[];for(const e of t)r.push(this.createSubcategory({...e,nestId:`${a}_${e.id}`,isSelected:e.isSelected??!0}));if(i.hasDerivedSubcategories)for(const e of s.subcategories){const i=Utils.deepClone(e);t.find((t=>t.id===i.id))||r.push({...i,isSelected:!1,actions:[]})}s.subcategories=r,e&&(s.advancedCategoryOptions={...e}),await this.saveUserActionList(o),Logger.debug("Subcategories saved",{actionList:o})}addToDerivedSubcategories(t,e){const i=t.nestId,n=Utils.deepClone(e,{strict:!0});this.derivedSubcategories.has(i)||this.derivedSubcategories.set(i,[]),this.derivedSubcategories.get(i).push(n)}async saveDerivedSubcategories(){for(const[t,e]of this.derivedSubcategories){const i=Utils.deepClone(e,{strict:!0});await this.saveSubcategories(i,null,{nestId:t,type:a.SYSTEM,hasDerivedSubcategories:!0})}}async saveUserActionList(t){Logger.debug("Saving user action list...");const e=Utils.deepClone(t);await Utils.setUserFlag("categories",e),Logger.debug("User action list saved",{actionList:e})}async getAdvancedCategoryOptions(t){const e=(await Utils.getSubcategoryByNestId(this.flattenedSubcategories,{nestId:t}))?.advancedCategoryOptions;return e??null}async getSelectedCategoriesAsTagifyEntries(){const t=Utils.getUserFlag("categories");if(t)return t.map((t=>this._toTagifyEntry(t)))}async getSelectedSubcategoriesAsTagifyEntries(t){const e=game.tokenActionHud.actionHandler.actionList.categories;if(!e)return[];const i=await Utils.getSubcategoryByNestId(e,t);if(!i)return[];if(!i.subcategories)return[];const n=i.subcategories.filter((t=>t.isSelected)).map((t=>this._toTagifyEntry(t)));return n||[]}async getAvailableSubcategoriesAsTagifyEntries(t){const e=t?.hasDerivedSubcategories;if("true"===e)return await this.getDerivedSubcategoriesAsTagifyEntries(t);const i=await this.getSystemSubcategoriesAsTagifyEntries(),n=await this.getCompendiumSubcategoriesAsTagifyEntries(),o=[];return o.push(...i,...n),o}async getDerivedSubcategoriesAsTagifyEntries(t){const e=t.nestId;return this.getFlattenedSubcategories({nestId:e,type:a.SYSTEM_DERIVED}).map((t=>this._toTagifyEntry(t)))}async getSystemSubcategoriesAsTagifyEntries(){return Utils.getUserFlag("default.subcategories").map((t=>this._toTagifyEntry(t)))}async getCompendiumSubcategoriesAsTagifyEntries(){return game.packs.filter((t=>n.includes(t.documentName))).filter((t=>game.user.isGM||!t.private)).map((t=>({id:t.metadata.id.replace(".","-"),value:t.metadata.label,type:a.COMPENDIUM,level:a.SUBCATEGORY})))}isLinkedCompendium(t){return this.categories.some((e=>e.subcategories?.some((e=>e.compendiumId===t))))}_toTagifyEntry(t){return{id:t.id,value:t.name,type:t.type,level:s.SUBCATEGORY,hasDerivedSubcategories:t.hasDerivedSubcategories??"false"}}}export{i as ACTION_TYPE,ActionHandler,ActionListExtender,o as COMPENDIUM_ACTION_TYPES,n as COMPENDIUM_PACK_TYPES,CategoryManager,CategoryResizer,CompendiumActionHandler,CompendiumMacroPreHandler,e as DELIMITER,GenericActionHandler,ItemMacroActionListExtender,ItemMacroPreRollHandler,Logger,t as MODULE,MacroActionHandler,MigrationManager,PreRollHandler,RollHandler,s as SUBCATEGORY_LEVEL,a as SUBCATEGORY_TYPE,SystemManager,TagDialog,TagDialogHelper,Timer,TokenActionHud,Utils,registerSettings};
