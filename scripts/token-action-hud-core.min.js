class TagDialog extends Dialog{i18n=e=>game.i18n.localize(e);tagify=null;dragSort=null;constructor(e,t){super(t),this.data=e,this.categoryId=null,this.subcategoryId=null}static showDialog(e,t,i,n){this.nestId=e,TagDialog._prepareHook(t);const o=Handlebars.compile("{{> modules/token-action-hud-core/templates/tagdialog.hbs}}");new TagDialog({title:i.title,content:o(i.content),buttons:{accept:{icon:'<i class="fas fa-check"></i>',label:game.i18n.localize("tokenActionHud.accept"),callback:async e=>{const t=TagDialog.tagify.value.map((e=>(e.id=e.id??e.value.slugify({replacement:"-",strict:!0}),{id:e.id,name:e.value,type:e.type,level:e.level,hasDerivedSubcategories:e.hasDerivedSubcategories})));await n(t,e)}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("tokenActionHud.cancel")}},default:"accept"}).render(!0)}static _prepareHook(e){Hooks.once("renderTagDialog",((t,i,n)=>{i.css("height","auto");const o=i.find('select[id="token-action-hud-index"]');o.length>0&&(o.css("background","#fff"),o.css("color","#000"));const a=i.find('input[class="token-action-hud-taginput"]');if(a.length>0){const s={delimiters:";",maxTags:"Infinity",dropdown:{maxItems:50,classname:"tags-look",enabled:0,closeOnSelect:!1}};function onDragEnd(e){TagDialog.tagify.updateValueByDOMTags()}e.available&&(s.whitelist=e.available),TagDialog.tagify=new Tagify(a[0],s),TagDialog.dragSort=new DragSort(TagDialog.tagify.DOM.scope,{selector:"."+TagDialog.tagify.settings.classNames.tag,callbacks:{dragEnd:onDragEnd}});const r=$(document).find(".tagify");r.css("background","#fff"),r.css("color","#000"),e.selected&&TagDialog.tagify.addTags(e.selected);i.find('button[class="tags--removeAllBtn"]').on("click",TagDialog.tagify.removeAllTags.bind(TagDialog.tagify))}}))}_onKeyDown(e){if("Escape"===e.key&&!e.target.className.includes("tagify"))return e.preventDefault(),e.stopPropagation(),this.close();if("Enter"===e.key&&this.data.default&&!e.target.className.includes("tagify")){e.preventDefault(),e.stopPropagation();const t=this.data.buttons[this.data.default];return this.submit(t)}}}class TagDialogHelper{static async showCategoryDialog(e){const t={available:[]};t.selected=await e.getSelectedCategoriesAsTagifyEntries();const i={title:game.i18n.localize("tokenActionHud.tagDialog.categoryDialogTitle"),content:{topLabel:game.i18n.localize("tokenActionHud.tagDialog.categoryDialogDescription"),placeholder:game.i18n.localize("tokenActionHud.tagDialog.tagPlaceholder"),clearButtonText:game.i18n.localize("tokenActionHud.tagDialog.clearButton"),indexExplanationLabel:game.i18n.localize("tokenActionHud.pushLabelExplanation")}};TagDialog.showDialog(null,t,i,(async t=>{await e.saveCategories(t),Hooks.callAll("forceUpdateTokenActionHud")}))}static async showSubcategoryDialog(e,t){const{nestId:i,name:n}=t,o={};o.available=await e.getAvailableSubcategoriesAsTagifyEntries(t),o.selected=await e.getSelectedSubcategoriesAsTagifyEntries(t);const a={title:game.i18n.localize("tokenActionHud.tagDialog.subcategoryDialogTitle")+` (${n})`,content:{topLabel:game.i18n.localize("tokenActionHud.tagDialog.subcategoryDialogDescription"),placeholder:game.i18n.localize("tokenActionHud.tagDialog.tagPlaceholder"),clearButtonText:game.i18n.localize("tokenActionHud.tagDialog.clearButton"),advancedCategoryOptions:await e.getAdvancedCategoryOptions(i),level:"category"}};TagDialog.showDialog(i,o,a,(async(i,n)=>{i=i.map((e=>(e.id=e.id??e.name.slugify({replacement:"-",strict:!0}),e.type=e.type??"custom",e.hasDerivedSubcategories=e.hasDerivedSubcategories??"false",{id:e.id,name:e.name,type:e.type,hasDerivedSubcategories:e.hasDerivedSubcategories})));const o={customWidth:parseInt(n.find('input[name="custom-width"]').val()),characterCount:parseInt(n.find('input[name="character-count"]').val())};await e.saveSubcategories(i,o,t),Hooks.callAll("forceUpdateTokenActionHud")}))}static async showActionDialog(e,t,i){const{nestId:n,name:o}=i,a={},s=await t.getActionsAsTagifyEntries(i),r=await e.getAvailableSubcategoriesAsTagifyEntries(i);a.available=[...s,...r];const c=await t.getSelectedActionsAsTagifyEntries(i),l=await e.getSelectedSubcategoriesAsTagifyEntries(i);a.selected=[...c,...l];const d={title:`${game.i18n.localize("tokenActionHud.tagDialog.actionDialogTitle")} (${o})`,content:{topLabel:game.i18n.localize("tokenActionHud.tagDialog.actionDialogDescription"),placeholder:game.i18n.localize("tokenActionHud.tagDialog.tagPlaceholder"),clearButtonText:game.i18n.localize("tokenActionHud.tagDialog.clearButton"),indexExplanationLabel:game.i18n.localize("tokenActionHud.blockListLabel"),advancedCategoryOptions:await e.getAdvancedCategoryOptions(n),level:"subcategory"}};TagDialog.showDialog(n,a,d,(async(n,o)=>{const a=[],s=[];for(const e of n)switch(e.level){case"subcategory":a.push(e);break;case"action":s.push(e)}const r={customWidth:parseInt(o.find('input[name="custom-width"]').val()),characterCount:parseInt(o.find('input[name="character-count"]').val())};await e.saveSubcategories(a,r,i),await t.saveActions(s,i),Hooks.callAll("forceUpdateTokenActionHud")}))}}class CategoryResizer{static async resizeHoveredCategory(e,t,i){if(!t)return;const n=t.querySelectorAll(".tah-actions");if(0===n.length)return;const o=t.querySelector(".tah-subcategories"),a=t.id.replace("tah-category-",""),s=(await e.getAdvancedCategoryOptions(a))?.customWidth,r=o.getBoundingClientRect(),c=r.height,l=r.top,d=canvas.screenDimensions[1],g=("down"===i?document.querySelector("#ui-bottom"):document.querySelector("#ui-top")).offsetHeight,u="down"===i?d-l-g-10:c+l-g-10,h=u<100?100:u;let m=500;if(s)m=s;else{const e=document.querySelector("#ui-right"),t=canvas.screenDimensions[0],i=getComputedStyle(o),a=Math.ceil(parseFloat(i.paddingLeft)||0)+Math.ceil(parseFloat(i.paddingRight)||0),s=r.left,c=e.clientWidth,l=(c>0?t-c:t)-10-s;let d=null,g=null,u=0,h=0;for(const e of n){const t=e.querySelectorAll(".tah-action");if(t.length>0){(t.length<d||null===d)&&(d=t.length),(t.length>g||null===g)&&(g=t.length);let e=0;t.forEach((t=>{const i=getComputedStyle(t),n=Math.ceil(parseFloat(i.width)+1||0);e+=n}));const i=5*t.length-5;e+=i,e>u&&(u=e);const n=e/t.length;n>h&&(h=n)}}h+=a,u+=a;const p=5,f=p/2+p;let y=p;const b=Math.floor(l/h);d<b&&d>Math.floor(f)&&(y=d),g<b&&g<Math.ceil(f)&&(y=g),b<y&&(y=b),m=h*y,m>u&&(m=u),m<200&&(m=200)}requestAnimationFrame((()=>{Object.assign(o.style,{maxHeight:`${Math.ceil(h)}px`,width:`${m}px`})}))}}class Logger{static info(...e){console.log("Token Action HUD Info |",...e)}static error(...e){console.error("Token Action HUD Error |",...e)}static debug(e,t){if(game.tokenActionHud?game.tokenActionHud.isDebug:getSetting("debug")){if(!t)return void console.log(`Token Action HUD Debug | ${e}`);const i=deepClone(t);console.log(`Token Action HUD Debug | ${e}`,i)}}}function checkAllow(e){return e>=getSetting("allow")}function getSetting(e,t=null){let i=t??null;try{i=game.settings.get("token-action-hud-core",e)}catch{Logger.debug(`Setting '${e}' not found`)}return i}async function setSetting(e,t){game.settings.settings.get(`token-action-hud-core.${e}`)?(t=await game.settings.set("token-action-hud-core",e,t),Logger.debug(`Setting '${e}' set to '${t}'`)):Logger.debug(`Setting '${e}' not found`)}function switchCSS(e){const t=[{setting:"compact",file:"tah-compact"},{setting:"foundryVTT",file:"tah-foundry-vtt"},{setting:"dorakoUI",file:"tah-dorako"}];for(const i of t){const t=["modules/token-action-hud-core/",`styles/${i.file}`];i.setting===e?Object.values(document.styleSheets).find((e=>e.href?.includes(t[0])&&e.href?.includes(t[1]))).disabled=!1:Object.values(document.styleSheets).find((e=>e.href?.includes(t[0])&&e.href?.includes(t[1]))).disabled=!0}}function registerHandlebars(){Handlebars.registerHelper("cap",(function(e){return!e||e.length<1?"":e[0].toUpperCase()+e.slice(1)}));const reduceOp=function(e,t){(e=Array.from(e)).pop();const i=e.shift();return e.reduce(t,i)};Handlebars.registerHelper({eq:function(){return reduceOp(arguments,((e,t)=>e===t))},ne:function(){return reduceOp(arguments,((e,t)=>e!==t))},lt:function(){return reduceOp(arguments,((e,t)=>e<t))},gt:function(){return reduceOp(arguments,((e,t)=>e>t))},lte:function(){return reduceOp(arguments,((e,t)=>e<=t))},gte:function(){return reduceOp(arguments,((e,t)=>e>=t))},and:function(){return reduceOp(arguments,((e,t)=>e&&t))},or:function(){return reduceOp(arguments,((e,t)=>e||t))},tf:function(){return reduceOp(arguments,(e=>e))}}),Handlebars.registerHelper("activeText",(function(e){return getSetting("activeCssAsText")?e.fn(this):e.inverse(this)}))}function getModuleVersionParts(e){if(!e)return void Logger.debug("Module version not retrieved",{trigger:"getModuleVersionParts"});const t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}}function getSubcategories(e,t={}){if(!e)return;const i=t?.id,n=t?.type;e=Array.isArray(e)?e:Object.values(e);let o=[];for(const a of e)if(i&&a.id!==i||n&&a.type!==n||o.push(a),a.subcategories.length>0){const e=getSubcategories(a.subcategories,t);e&&(o=o.concat(e.filter((e=>void 0!==e))))}return o.length>0?o:null}async function getSubcategoryByNestId(e,t={}){const i="string"==typeof t?t:t?.nestId,n=t?.type??"system";if(!i)return;const o=i.split("_");return await async function findSubcategory(e,t){e=Array.isArray(e)?e:Object.values(e);for(const i of e)if(i.id===t[0]){if(1===t.length)return i.type&&i.type!==n?void 0:i;if(0===i.subcategories.length)return;t.shift();const e=await findSubcategory(i.subcategories,t);if(e)return e}}(e,o)}class TokenActionHud extends Application{i18n=e=>game.i18n.localize(e);hoveredCategoryId="";defaultHeight=200;defaultWidth=20;defaultLeftPos=150;defaultTopPos=80;defaultScale=1;refreshTimeout=null;rendering=!1;tokens=null;constructor(e){super(),this.systemManager=e,this.direction="down",this.isAlwaysShow=!1,this.isClickOpen=!1,this.isCollapsed=!1,this.isDraggable=!1,this.isEnabled=!1,this.isUnlocked=!1,this.namespace="token-action-hud-core"}async init(e){this.direction=getSetting("direction"),this.isAlwaysShow=getSetting("alwaysShowHud"),this.isClickOpen=getSetting("clickOpenCategory"),this.isCollapsed=game.user.getFlag(this.namespace,"isCollapsed"),this.isDebug=getSetting("debug"),this.isDraggable=getSetting("drag"),this.isEnabled=this.isHudEnabled(),this.isUnlocked=game.user.getFlag(this.namespace,"isUnlocked"),await this.systemManager.registerDefaultFlags(),this.categoryManager=await this.systemManager.getCategoryManager(e),this.actionHandler=await this.systemManager.getActionHandler(this.categoryManager),this.rollHandler=this.systemManager.getRollHandler()}updateSettings(){this.updateRollHandler(),this.direction=getSetting("direction"),this.isAlwaysShow=getSetting("alwaysShowHud"),this.isClickOpen=getSetting("clickOpenCategory"),this.isDebug=getSetting("debug"),this.isDraggable=getSetting("drag"),this.isEnabled=this.isHudEnabled(),this.actionHandler.displayIcons=getSetting("displayIcons");this.update({trigger:{type:"method",name:"TokenActionHud.updateSettings"}})}updateRollHandler(){this.rollHandler=this.systemManager.getRollHandler()}setTokens(e){this.tokens=e}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"/modules/token-action-hud-core/templates/template.hbs",id:"token-action-hud",classes:[],width:this.defaultWidth,height:this.defaultHeight,left:this.defaultLeftPos,top:this.defaultTopPos,scale:this.defaultScale,background:"none",popOut:!1,minimizable:!1,resizable:!1,title:"token-action-hud",dragDrop:[],tabs:[],scrollY:[]})}getScale(){const e=parseFloat(getSetting("scale"));return e<.5?.5:e>2?2:e}getData(e={}){const t=super.getData();return t.actions=this.actionList,t.id="token-action-hud",t.scale=this.getScale(),t.background=getSetting("background")??"#00000000",Logger.debug("Application data",{data:t}),t}activateListeners(e){const t={subtitles:e.find(".tah-subtitle"),actions:e.find(".tah-action"),categoriesSection:e.find("#tah-categories"),editCategoriesButton:e.find("#tah-edit-categories"),categories:e.find(".tah-category"),subcategories:e.find(".tah-subcategory"),titleButtons:e.find(".tah-title-button"),buttons:e.find("#tah-buttons"),collapseHudButton:e.find("#tah-collapse-hud"),expandHudButton:e.find("#tah-expand-hud"),unlockButton:e.find("#tah-unlock"),lockButton:e.find("#tah-lock")};this._bindCategoryEvents(t),this._bindEditCategoriesButton(t),this._bindLockUnlockButtons(t),this._bindCollapseExpandButtons(t);const handleAction=e=>{let t=e.target;"BUTTON"!==t.tagName&&(t=e.currentTarget.children[0]);const i=t.value;try{this.rollHandler.handleActionEvent(e,i),t.blur()}catch(t){Logger.error(e)}},openActionDialog=e=>{const{id:t,innerText:i,outerText:n,dataset:o}=e.target;if(!t)return;const a=t,s=i||n,r=o?.type,c=o?.hasDerivedSubcategories;TagDialogHelper.showActionDialog(this.categoryManager,this.actionHandler,{nestId:a,name:s,type:r,hasDerivedSubcategories:c})};t.subtitles.on("click contextmenu",(e=>{this.isUnlocked&&openActionDialog(e)})),t.actions.on("click contextmenu",(e=>{e.preventDefault(),handleAction(e)})),$(document).find(".tah-filterholder").parents(".tah-subcategory").css("cursor","pointer")}_bindCategoryEvents(e){const closeCategory=e=>{if(game.tokenActionHud.rendering)return;const t=this.isClickOpen?e.target.parentElement:e.currentTarget;t.classList.remove("hover");const i=t.id;this.clearHoveredCategory(i)},openCategory=e=>{const t=this.isClickOpen?e.target.parentElement:e.currentTarget;t.classList.add("hover");const i=t.id;this.setHoveredCategory(i),CategoryResizer.resizeHoveredCategory(this.categoryManager,t,this.direction)},toggleCategory=t=>{if(t.target.parentElement.classList.contains("hover"))closeCategory(t);else{for(const t of e.categories)t.classList.remove("hover");openCategory(t)}};e.titleButtons.on("click",(()=>this.bringToTop())),this.isClickOpen?e.titleButtons.on("click",toggleCategory):(e.categories.get().forEach((e=>{e.addEventListener("touchstart",toggleCategory,{passive:!0})})),e.categories.hover(openCategory,closeCategory)),e.titleButtons.on("mousedown",(e=>this.dragEvent(e))),e.titleButtons.get().forEach((e=>{e.addEventListener("touchstart",(e=>this.dragEvent(e)),{passive:!0})}));const openSubcategoryDialog=e=>{const t=e.target;if(0===t.value.length)return;const i=t.value,n=t.innerText??t.outerText,o=t?.dataset?.type;TagDialogHelper.showSubcategoryDialog(this.categoryManager,{nestId:i,name:n,type:o})};e.titleButtons.on("contextmenu",(e=>{this.isUnlocked&&openSubcategoryDialog(e)}))}_bindEditCategoriesButton(e){e.editCategoriesButton.on("click",(e=>{e.preventDefault(),e=e||window.event,TagDialogHelper.showCategoryDialog(this.categoryManager)}))}_bindLockUnlockButtons(e){const unlockHud=async(t=null)=>{t&&(t.preventDefault(),t=t||window.event);const i=t?.target||e.unlockButton;$(i).addClass("tah-hidden"),e.lockButton.removeClass("tah-hidden"),e.editCategoriesButton.removeClass("tah-hidden"),e.categories.removeClass("tah-hidden"),e.subcategories.removeClass("tah-hidden"),e.titleButtons.removeClass("disable-edit"),e.subtitles.removeClass("disable-edit"),this.isUnlocked||(await game.user.setFlag(this.namespace,"isUnlocked",!0),this.isUnlocked=!0)},lockHud=async(t=null)=>{t&&(t.preventDefault(),t=t||window.event);const i=t?.target||e.lockButton;$(i).addClass("tah-hidden"),e.unlockButton.removeClass("tah-hidden"),e.editCategoriesButton.addClass("tah-hidden");for(const t of e.categories){t.getElementsByClassName("tah-action").length>0||$(t).addClass("tah-hidden")}for(const t of e.subcategories){t.getElementsByClassName("tah-action").length>0||$(t).addClass("tah-hidden")}e.titleButtons.addClass("disable-edit"),e.subtitles.addClass("disable-edit"),this.isUnlocked&&(await game.user.setFlag(this.namespace,"isUnlocked",!1),this.isUnlocked=!1)};this.isUnlocked?unlockHud():lockHud(),e.unlockButton.on("click",(e=>unlockHud(e))),e.lockButton.on("click",(e=>lockHud(e)))}_bindCollapseExpandButtons(e){const collapseHud=(t=null)=>{t&&(t.preventDefault(),t=t||window.event);const i=t?.target||e.collapseHudButton;$(i).addClass("tah-hidden"),e.expandHudButton.removeClass("tah-hidden"),e.categoriesSection.addClass("tah-hidden"),e.buttons.addClass("tah-hidden"),this.isCollapsed||(game.user.setFlag(this.namespace,"isCollapsed",!0),this.isCollapsed=!0)},expandHud=t=>{t.preventDefault(),t=t||window.event,$(t.target).addClass("tah-hidden"),e.collapseHudButton.removeClass("tah-hidden"),e.categoriesSection.removeClass("tah-hidden"),e.buttons.removeClass("tah-hidden"),this.isCollapsed&&(game.user.setFlag(this.namespace,"isCollapsed",!1),this.isCollapsed=!1)};this.isCollapsed&&collapseHud(),e.collapseHudButton.on("click",(e=>collapseHud(e))),e.expandHudButton.on("click",(e=>expandHud(e))),e.expandHudButton.on("mousedown",(e=>this.dragEvent(e))),e.expandHudButton.get(0).addEventListener("touchstart",(e=>this.dragEvent(e)),{passive:!0})}dragEvent(e){if(!this.isDraggable)return;const t=document.getElementById("token-action-hud"),i=e.clientX??e.changedTouches[0].clientX,n=e.clientY??e.changedTouches[0].clientY;let o=0,a=0,s=i,r=n;const c=t.offsetTop,l=t.offsetLeft;let d=c,g=l;const mouseMoveEvent=e=>{const i=e.clientX??e.changedTouches[0].clientX,n=e.clientY??e.changedTouches[0].clientY;o=s-i,a=r-n,s=i,r=n,o===s&&a===r||(d-=a,g-=o,requestAnimationFrame((()=>{Object.assign(t.style,{left:`${g}px`,position:"fixed",top:`${d}px`})})))},mouseUpEvent=()=>{document.onmousemove=null,t.ontouchmove=null,document.onmouseup=null,t.ontouchend=null,d===c&&g===l||(game.user.setFlag(this.namespace,"position",{top:d,left:g}),Logger.debug(`Set position to x: ${d}px, y: ${g}px`))};document.onmousemove=mouseMoveEvent,t.ontouchmove=mouseMoveEvent,document.onmouseup=mouseUpEvent,t.ontouchend=mouseUpEvent}applySettings(){"up"===getSetting("direction")&&($(document).find(".tah-subcategories-wrapper").removeClass("expand-down"),$(document).find(".tah-subcategories-wrapper").addClass("expand-up"),$(document).find("#tah-character-name").addClass("tah-hidden"))}setPosition(){if(!this.actionList)return;const e=$(document).find("#tah-character-name");e.length>0&&e.css("top",-e[0].getBoundingClientRect().height),canvas?.tokens?.placeables.find((e=>e.id===this.actionList?.tokenId)),this.setPositionFromFlag(),this.restoreHoveredCategoryState(),this.rendering=!1}setPositionFromFlag(){if(!game.user.flags[this.namespace].position)return;const e=game.user.flags[this.namespace].position,t=this.defaultLeftPos,i=this.defaultTopPos;return new Promise((n=>{!function check(){const o=document.getElementById("token-action-hud");o?(o.style.bottom=null,o.style.top=e.top<5||e.top>window.innerHeight+5?i+"px":e.top+"px",o.style.left=e.left<5||e.left>window.innerWidth+5?t+"px":e.left+"px",o.style.position="fixed",n()):setTimeout(check,30)}()}))}setPositionFromToken(e){return new Promise((t=>{!function check(e){const i=$("#token-action-hud");i?(i.css("bottom",null),i.css("left",e.worldTransform.tx+(e.width*canvas.dimensions.size+55)*canvas.scene._viewPosition.scale+"px"),i.css("top",e.worldTransform.ty+0+"px"),i.css("position","fixed"),t()):setTimeout(check,30)}(e)}))}async resetPosition(){Logger.debug("Resetting position..."),await game.user.setFlag(this.namespace,"position",{top:this.defaultTopPos,left:this.defaultLeftPos}),Logger.debug(`Position reset to x: ${this.defaultTopPos}px, y: ${this.defaultLeftPos}px`)}setHoveredCategory(e){this.hoveredCategoryId=e}clearHoveredCategory(e){this.hoveredCategoryId===e&&(this.hoveredCategoryId="")}restoreHoveredCategoryState(){if(""===this.hoveredCategoryId)return;const e=`#${this.hoveredCategoryId}`,t=$(e);if(t[0])if(this.isClickOpen){t.find(".tah-title-button")[0].click()}else t.mouseenter()}async reset(){await this.resetUserFlags(),this.resetPosition()}async resetActorFlags(){await this.categoryManager.resetActorFlags();this.update({trigger:{type:"method",name:"TokenActionHud.resetActorFlags"}})}async resetUserFlags(){await this.categoryManager.resetUserFlags(),this.categoryManager.resetCategoryManager(),this.actionHandler.resetActionHandler();this.update({trigger:{type:"method",name:"TokenActionHud.resetUserFlags"}})}update(e=null){this._updateHud(e)}async _updateHud(e){Logger.debug("Updating hud...",e);const t=this.tokens?.controlled,i=this._getCharacter(t),n=t.length>1&&!i;return(i||n)&&this.isEnabled?(this.actionList=await this.actionHandler.buildActionList(i),0===this.actionList.length?(this.close(),void Logger.debug("Hud update aborted as action list empty")):(this.rendering=!0,this.render(!0),void Logger.debug("Hud updated"))):(this.close(),void Logger.debug("Hud update aborted as no character(s) found or hud is disabled"))}isValidTokenChange(e,t=null){return!t?.actorData?.flags&&(this.isAlwaysShow?this.isRelevantToken(e)||e.actorId===game.user.character?.id:this.isRelevantToken(e))}isRelevantToken(e){const t=this.tokens?.controlled;return t?.some((t=>t.id===e.id))||0===t?.length&&canvas?.tokens?.placeables?.some((e=>e.id===this.actionList?.tokenId))}isValidActorOrItemUpdate(e,t){return t?.flags?(Logger.debug("Flags set, do not update hud",{actor:e,data:t}),!1):e?e?this.actionList&&e.id===this.actionList.actorId?(Logger.debug("Same actor, update hud",{actor:e,data:t}),!0):(Logger.debug("Different actor, do not update hud",{actor:e,data:t}),!1):(Logger.debug("No actor, update hud",{data:t}),!0):void 0}isHudEnabled(){const e=game.user.role,t=game.user.isGM;return!!getSetting("enable")&&(!!t||checkAllow(e))}isLinkedCompendium(e){return Logger.debug("Compendium hook triggered, checking if compendium is linked..."),this.categoryManager.isLinkedCompendium(e)}_getCharacter(e=[]){if(e.length>1)return null;const t={token:null,actor:null};if(1===e.length){const i=e[0],n=i.actor;if(!this._isValidCharacter(i))return null;t.token=i,t.actor=n}else 0===e.length&&game.user.character&&this.isAlwaysShow&&(t.actor=game.user.character,t.token=canvas.tokens.placeables.find((e=>e.actor?.id===t.actor.id)));return t.actor?(t.id=t.token?.id??t.actor.id,t.name=t.token?.name??t.actor.name,t):null}_isValidCharacter(e=""){const t=e.actor,i=game.user;return game.user.isGM||t?.testUserPermission(i,"OWNER")}}let e;Hooks.on("ready",(async()=>{const t=game.system.id,i=`token-action-hud-${t}`,n=getModuleVersionParts(game.modules.get("token-action-hud-core").version),o=`../../${i}/enums/core-version.js`,a=await import(o).then((e=>e.coreModuleVersion));if(n.major!==a.major||n.minor!==a.minor)return void ui.notifications.error(`The installed Token Action Hud system module requires Token Action Hud core module version ${a.full}.`);const s=`../../${i}/scripts/${i}.min.js`,r=(await import(s)).SystemManager;if(!r)return void ui.notifications.error("Token Action Hud system module not found.");const c=`token-action-hud-${t}`;game.modules.get(c)?.active?(e=new r("token-action-hud-core"),e.registerSettings(),switchCSS(getSetting("style")),registerHandlebars(),loadTemplates(["modules/token-action-hud-core/templates/category.hbs","modules/token-action-hud-core/templates/subcategory.hbs","modules/token-action-hud-core/templates/action.hbs","modules/token-action-hud-core/templates/tagdialog.hbs"]),Hooks.callAll("tokenActionHudInitialized")):ui.notifications.error("Token Action Hud system module is not active.")})),Hooks.on("canvasReady",(async()=>{Hooks.on("tokenActionHudInitialized",(async()=>{if(game.user.isGM&&!game.modules.get("lib-themer")?.active&&!game.modules.get("color-picker")?.active&&!game.modules.get("colorsettings")?.active){!1===getSetting("startup")&&(ui.notifications.notify("Token Action Hud: To set colors within this module's settings, install and enable one of the following 'Color Picker', 'Color Settings' or 'libThemer' modules."),setSetting("startup",!0))}const t=game.user;game.tokenActionHud||(game.tokenActionHud=new TokenActionHud(e),await game.tokenActionHud.init(t)),game.tokenActionHud.setTokens(canvas.tokens),Hooks.on("controlToken",((e,t)=>{const i=game.tokenActionHud.actionHandler.actorId;t&&i===e.document.actor.id||(t||i!==game.user.character.id)&&async function delayUpdate(e,t){const i={trigger:{type:"hook",name:"controlToken",data:[e,t]}};t||await new Promise((e=>setTimeout(e,50))),(t||!t&&!game.canvas.tokens.controlled.length)&&game.tokenActionHud.update(i)}(e,t)})),Hooks.on("updateToken",((e,t,i)=>{if(!Object.hasOwn(i,"y")&&!Object.hasOwn("diff","x")&&game.tokenActionHud.isValidTokenChange(e,t)){const n={trigger:{type:"hook",name:"updateToken",data:[e,t,i]}};game.tokenActionHud.update(n)}})),Hooks.on("deleteToken",((e,t,i,n)=>{if(game.tokenActionHud.isValidTokenChange(t)){const o={trigger:{type:"hook",name:"deleteToken",data:[e,t,i,n]}};game.tokenActionHud.update(o)}})),Hooks.on("updateActor",((e,t)=>{if(game.tokenActionHud.isValidActorOrItemUpdate(e,t)){const i={trigger:{type:"hook",name:"updateActor",data:[e,t]}};game.tokenActionHud.update(i)}})),Hooks.on("deleteActor",((e,t)=>{if(game.tokenActionHud.isValidActorOrItemUpdate(e,t)){const i={trigger:{type:"hook",name:"deleteActor",data:[e,t]}};game.tokenActionHud.update(i)}})),Hooks.on("deleteItem",(e=>{const t=e.actor;if(game.tokenActionHud.isValidActorOrItemUpdate(t)){const t={trigger:{type:"hook",name:"deleteItem",data:[e]}};game.tokenActionHud.update(t)}})),Hooks.on("createItem",(e=>{const t=e.actor;if(game.tokenActionHud.isValidActorOrItemUpdate(t)){const t={trigger:{type:"hook",name:"createItem",data:[e]}};game.tokenActionHud.update(t)}})),Hooks.on("updateItem",(e=>{const t=e.actor;if(game.tokenActionHud.isValidActorOrItemUpdate(t)){const t={trigger:{type:"hook",name:"updateItem",data:[e]}};game.tokenActionHud.update(t)}})),Hooks.on("renderTokenActionHud",(()=>{game.tokenActionHud.applySettings()})),Hooks.on("renderCompendium",((e,t)=>{const i=e?.metadata;if(game.tokenActionHud.isLinkedCompendium(`${i?.package}.${i?.name}`)){const i={trigger:{type:"hook",name:"renderCompendium",data:[e,t]}};game.tokenActionHud.update(i)}})),Hooks.on("deleteCompendium",((e,t)=>{const i=e?.metadata;if(game.tokenActionHud.isLinkedCompendium(`${i?.package}.${i?.name}`)){const i={trigger:{type:"hook",name:"deleteCompendium",data:[e,t]}};game.tokenActionHud.update(i)}})),Hooks.on("createCombat",(e=>{const t={trigger:{type:"hook",name:"createCombat",data:[e]}};game.tokenActionHud.update(t)})),Hooks.on("deleteCombat",(e=>{const t={trigger:{type:"hook",name:"deleteCombat",data:[e]}};game.tokenActionHud.update(t)})),Hooks.on("updateCombat",(e=>{const t={trigger:{type:"hook",name:"updateCombat",data:[e]}};game.tokenActionHud.update(t)})),Hooks.on("updateCombatant",((e,t)=>{const i={trigger:{type:"hook",name:"updateCombatant",data:[e,t]}};game.tokenActionHud.update(i)})),Hooks.on("forceUpdateTokenActionHud",(()=>{game.tokenActionHud.update({trigger:{type:"hook",name:"forceUpdateTokenActionHud"}})})),Hooks.on("createActiveEffect",(()=>{game.tokenActionHud.update({trigger:{type:"hook",name:"createActiveEffect"}})})),Hooks.on("deleteActiveEffect",(()=>{game.tokenActionHud.update({trigger:{type:"hook",name:"deleteActiveEffect"}})}));game.tokenActionHud.update({trigger:{type:"hook",name:"canvasReady"}})}))}));const t="token-action-hud-core";class CategoryManager{i18n=e=>game.i18n.localize(e);categories=[];user=null;constructor(e){this.user=e,this.flattenedSubcategories=[],this.derivedSubcategories=new Map}async resetCategoryManager(){this.flattenedSubcategories=[],this.derivedSubcategories=new Map}async resetActorFlags(){Logger.debug("Resetting actor flags...");const e=game.actors.filter((e=>e.getFlag(t,"categories")));e&&e.forEach((e=>{Logger.debug(`Resetting flags for actor [${e.id}]`,{actor:e}),e.unsetFlag(t,"categories")})),Logger.debug("Actor flags reset")}async resetUserFlags(){Logger.debug("Resetting user flags..."),await game.user.unsetFlag(t,"categories"),this.resetCategoryManager(),await this._registerDefaultCategories(),Logger.debug("User flags reset")}async init(){const e=this.user.getFlag(t,"categories");if(!e)return this._registerDefaultCategories();Logger.debug("Retrieved saved categories",{savedCategories:e})}async _registerDefaultCategories(){const e=this.user.getFlag(t,"default.categories");e&&(await game.user.setFlag(t,"categories",e),Logger.debug("Registered default categories",{defaultCategories:e}))}createCategory(e){const t=deepClone(e);return{id:t?.id,nestId:t?.nestId??this.id,name:t?.name,level:"category",advancedCategoryOptions:t?.advancedCategoryOptions??{},cssClass:"",subcategories:[]}}createSubcategory(e){const t=deepClone(e);return{id:t?.id,nestId:t?.nestId,name:t?.name,type:t?.type??"custom",level:"subcategory",advancedCategoryOptions:t?.advancedCategoryOptions??{},hasDerivedSubcategories:t?.hasDerivedSubcategories??!1,isSelected:t.isSelected??!0,info1:t?.info1??"",info2:t?.info2??"",info3:t?.info3??"",actions:[],subcategories:[]}}flattenSubcategories(e){this.flattenedSubcategories=getSubcategories(e.categories)}getFlattenedSubcategories(e={}){const t=e.id,i=e.nestId,n=e.type,o=e.level;return this.flattenedSubcategories.filter((e=>(!t||e.id===t)&&(!i||e.nestId.startsWith(i))&&(!n||e.type===n)&&(!o||e.level===o)))}addToFlattenedSubcategories(e){this.getFlattenedSubcategories(e).length>0||this.flattenedSubcategories.push(e)}async saveCategories(e){if(!e)return;const t=game.tokenActionHud.actionHandler.actionList.categories,i=[];for(const n of e){const e=n.id,o=t.find((t=>t.nestId===e)),a=deepClone(o?.subcategories)??null;i.push({nestId:n.id,id:n.id,name:n.name,subcategories:a})}i&&await this.saveUserActionList(i)}async saveSubcategories(e,t=null,i){if(!e)return;Logger.debug("Saving subcategories...",{choices:e,advancedCategoryOptions:t,subcategoryData:i});const n=game.tokenActionHud.actionHandler.actionList.categories,o=deepClone(n),a=await getSubcategoryByNestId(o,i);if(!a)return;const s=i.nestId,r=[];for(const t of e)r.push(this.createSubcategory({...t,nestId:`${s}_${t.id}`,isSelected:t.isSelected??!0}));if(i.hasDerivedSubcategories)for(const t of a.subcategories){const i=deepClone(t);e.find((e=>e.id===i.id))||r.push({...i,isSelected:!1,actions:[]})}a.subcategories=r,t&&(a.advancedCategoryOptions={...t}),await this.saveUserActionList(o),Logger.debug("Subcategories saved",{actionList:o})}addToDerivedSubcategories(e,t){const i=e.nestId,n=deepClone(t,{strict:!0});this.derivedSubcategories.has(i)||this.derivedSubcategories.set(i,[]),this.derivedSubcategories.get(i).push(n)}async saveDerivedSubcategories(){for(const[e,t]of this.derivedSubcategories){const i=deepClone(t,{strict:!0});await this.saveSubcategories(i,null,{nestId:e,type:"system",hasDerivedSubcategories:!0})}}async saveUserActionList(e){Logger.debug("Saving user action list...");const i=deepClone(e);await game.user.setFlag(t,"categories",i),Logger.debug("User action list saved",{actionList:i})}async getAdvancedCategoryOptions(e){const t=(await getSubcategoryByNestId(this.flattenedSubcategories,{nestId:e}))?.advancedCategoryOptions;return t??null}async getSelectedCategoriesAsTagifyEntries(){const e=this.user.getFlag(t,"categories");if(e)return e.map((e=>this.toTagifyEntry(e)))}async getSelectedSubcategoriesAsTagifyEntries(e){const t=game.tokenActionHud.actionHandler.actionList.categories;if(!t)return[];const i=await getSubcategoryByNestId(t,e);if(!i)return[];if(!i.subcategories)return[];const n=i.subcategories.filter((e=>e.isSelected)).map((e=>this.toTagifyEntry(e)));return n||[]}async getAvailableSubcategoriesAsTagifyEntries(e){const t=e?.hasDerivedSubcategories;if("true"===t)return await this.getDerivedSubcategoriesAsTagifyEntries(e);const i=await this.getSystemSubcategoriesAsTagifyEntries(),n=await this.getCompendiumSubcategoriesAsTagifyEntries(),o=[];return o.push(...i,...n),o}async getDerivedSubcategoriesAsTagifyEntries(e){const t=e.nestId;return this.getFlattenedSubcategories({nestId:t,type:"system-derived"}).map((e=>this.toTagifyEntry(e)))}async getSystemSubcategoriesAsTagifyEntries(){return(await this.user.getFlag(t,"default.subcategories")).map((e=>this.toTagifyEntry(e)))}async getCompendiumSubcategoriesAsTagifyEntries(){return game.packs.filter((e=>["JournalEntry","Macro","RollTable","Playlist"].includes(e.documentName))).filter((e=>game.user.isGM||!e.private)).map((e=>({id:e.metadata.id.replace(".","-"),value:e.metadata.label,type:"compendium",level:"subcategory"})))}isLinkedCompendium(e){return this.categories.some((t=>t.subcategories?.some((t=>t.compendiumId===e))))}toTagifyEntry(e){return{id:e.id,value:e.name,type:e.type,level:"subcategory",hasDerivedSubcategories:e.hasDerivedSubcategories??"false"}}}const updateFunc=e=>{Logger.debug("Settings updated. Refreshing HUD"),game.tokenActionHud&&game.tokenActionHud.updateSettings()};let i;const registerSettings=function(e,t,n){i=e,game.settings.register(i,"startup",{name:"One-Time Startup Prompt",scope:"world",config:!1,type:Boolean,default:!1}),game.settings.register(i,"rollHandler",{name:game.i18n.localize("tokenActionHud.settings.rollHandler.name"),hint:game.i18n.localize("tokenActionHud.settings.rollHandler.hint"),scope:"world",config:!0,type:String,choices:n,default:"core",onChange:e=>{updateFunc()}}),game.settings.register(i,"style",{name:game.i18n.localize("tokenActionHud.settings.style.name"),hint:game.i18n.localize("tokenActionHud.settings.style.hint"),scope:"client",config:!0,type:String,default:"foundryVTT",choices:{compact:"Compact",foundryVTT:"Foundry VTT",dorakoUI:"Dorako UI"},onChange:e=>{switchCSS(e)}}),game.settings.register(i,"direction",{name:game.i18n.localize("tokenActionHud.settings.direction.name"),hint:game.i18n.localize("tokenActionHud.settings.direction.hint"),scope:"client",config:!0,type:String,default:"down",choices:{up:game.i18n.localize("tokenActionHud.settings.direction.choices.up"),down:game.i18n.localize("tokenActionHud.settings.direction.choices.down")},onChange:e=>{updateFunc()}}),game.settings.register(i,"scale",{name:game.i18n.localize("tokenActionHud.settings.scale.name"),hint:game.i18n.localize("tokenActionHud.settings.scale.hint"),scope:"client",config:!0,type:Number,range:{min:.5,max:2,step:.05},default:1,onChange:e=>{updateFunc()}}),game.settings.register(i,"drag",{name:game.i18n.localize("tokenActionHud.settings.drag.name"),hint:game.i18n.localize("tokenActionHud.settings.drag.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{updateFunc()}}),initColorSettings(i),game.settings.register(i,"enable",{name:game.i18n.localize("tokenActionHud.settings.enable.name"),hint:game.i18n.localize("tokenActionHud.settings.enable.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{updateFunc()}}),game.settings.register(i,"allow",{name:game.i18n.localize("tokenActionHud.settings.allow.name"),hint:game.i18n.localize("tokenActionHud.settings.allow.hint"),scope:"world",config:!0,type:String,choices:{4:game.i18n.localize("tokenActionHud.settings.allow.choices.4"),3:game.i18n.localize("tokenActionHud.settings.allow.choices.3"),2:game.i18n.localize("tokenActionHud.settings.allow.choices.2"),1:game.i18n.localize("tokenActionHud.settings.allow.choices.1")},default:1,onChange:foundry.utils.debounce((()=>window.location.reload()),100)}),game.settings.register(i,"alwaysShowHud",{name:game.i18n.localize("tokenActionHud.settings.alwaysShowHud.name"),hint:game.i18n.localize("tokenActionHud.settings.alwaysShowHud.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{updateFunc()}}),game.settings.register(i,"displayCharacterName",{name:game.i18n.localize("tokenActionHud.settings.displayCharacterName.name"),hint:game.i18n.localize("tokenActionHud.settings.displayCharacterName.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{updateFunc()}}),game.settings.register(i,"displayIcons",{name:game.i18n.localize("tokenActionHud.settings.displayIcons.name"),hint:game.i18n.localize("tokenActionHud.settings.displayIcons.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{updateFunc()}}),game.settings.register(i,"clickOpenCategory",{name:game.i18n.localize("tokenActionHud.settings.clickOpenCategory.name"),hint:game.i18n.localize("tokenActionHud.settings.clickOpenCategory.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{updateFunc()}}),game.settings.register(i,"renderItemOnRightClick",{name:game.i18n.localize("tokenActionHud.settings.renderItemOnRightClick.name"),hint:game.i18n.localize("tokenActionHud.settings.renderItemOnRightClick.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{updateFunc()}}),game.modules.get("itemacro")?.active&&game.settings.register(i,"itemMacro",{name:game.i18n.localize("tokenActionHud.settings.itemMacro.name"),hint:game.i18n.localize("tokenActionHud.settings.itemMacro.hint"),scope:"client",config:!0,type:String,choices:{both:game.i18n.localize("tokenActionHud.settings.itemMacro.choices.both"),itemMacro:game.i18n.localize("tokenActionHud.settings.itemMacro.choices.itemMacro"),original:game.i18n.localize("tokenActionHud.settings.itemMacro.choices.original")},default:"both",onChange:e=>{updateFunc()}}),game.settings.register(i,"activeCssAsText",{name:game.i18n.localize("tokenActionHud.settings.activeCssAsText.name"),hint:game.i18n.localize("tokenActionHud.settings.activeCssAsText.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{updateFunc()}}),game.settings.register(i,"debug",{name:game.i18n.localize("tokenActionHud.settings.debug.name"),hint:game.i18n.localize("tokenActionHud.settings.debug.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{updateFunc()}}),game.settings.register(i,"reset",{name:game.i18n.localize("tokenActionHud.settings.reset.name"),hint:game.i18n.localize("tokenActionHud.settings.reset.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{e&&(setSetting("reset",!1),game.tokenActionHud.reset())}}),t.doRegisterSettings(updateFunc),Logger.debug("Available roll handlers",{rollHandlers:n})};function initColorSettings(e){let t=null;switch(game.modules.get("lib-themer")?.active?t="lib-themer":game.modules.get("color-picker")?.active?t="color-picker":game.modules.get("colorsettings")?.active&&(t="colorsettings"),t){case"lib-themer":Hooks.once("lib-themer.Ready",(t=>{t.register({id:e,title:game.modules.get(e).title,"--tah-background":{name:"tokenActionHud.settings.background.name",hint:"tokenActionHud.settings.background.hint",type:"color",default:"#00000000"},"--tah-button":{name:"tokenActionHud.settings.buttonBackgroundColor.name",hint:"tokenActionHud.settings.buttonBackgroundColor.hint",type:"color",default:"#00000080",colors:{buttons:!0}}})}));break;case"color-picker":"object"==typeof ColorPicker?registerColorSettings(e,t):Hooks.once("colorPickerReady",(()=>{registerColorSettings(e,t)}));break;case"colorsettings":Hooks.once("ready",(()=>{try{window.Ardittristan.ColorSetting.tester,registerColorSettings(e,t)}catch{}}))}}function registerColorSettings(e,t){const i={key:"background",name:game.i18n.localize("tokenActionHud.settings.background.name"),hint:game.i18n.localize("tokenActionHud.settings.background.hint"),scope:"client",restricted:!1,default:"#00000000",onChange:e=>{document.querySelector(":root").style.setProperty("--tah-background",e),updateFunc()}},n={key:"buttonBackgroundColor",name:game.i18n.localize("tokenActionHud.settings.buttonBackgroundColor.name"),hint:game.i18n.localize("tokenActionHud.settings.buttonBackgroundColor.hint"),scope:"client",restricted:!0,default:"#00000080",onChange:e=>{document.querySelector(":root").style.setProperty("--tah-button",e),updateFunc()}},o={key:"buttonBorderColor",name:game.i18n.localize("tokenActionHud.settings.buttonBorderColor.name"),hint:game.i18n.localize("tokenActionHud.settings.buttonBorderColor.hint"),scope:"client",restricted:!0,default:"#000000ff",onChange:e=>{document.querySelector(":root").style.setProperty("--tah-button-outline",e),updateFunc()}};if("color-picker"===t){const t={format:"hexa",alphaChannel:!0};ColorPicker.register(e,i.key,{name:i.name,hint:i.hint,scope:i.scope,restricted:i.restricted,default:i.default,onChange:i.onChange},t),ColorPicker.register(e,n.key,{name:n.name,hint:n.hint,scope:n.scope,restricted:n.restricted,default:n.default,onChange:n.onChange},t),ColorPicker.register(e,o.key,{name:o.name,hint:o.hint,scope:o.scope,restricted:o.restricted,default:o.default,onChange:o.onChange},t)}else"colorsettings"===t&&(new window.Ardittristan.ColorSetting(e,i.key,{name:i.name,hint:i.hint,scope:i.scope,restricted:i.restricted,defaultColor:i.default,onChange:i.onChange,insertAfter:`${e}.scale`}),new window.Ardittristan.ColorSetting(e,n.key,{name:n.name,hint:n.hint,scope:n.scope,restricted:n.restricted,defaultColor:n.default,onChange:n.onChange,insertAfter:`${e}.${i.key}`}),new window.Ardittristan.ColorSetting(e,o.key,{name:o.name,hint:o.hint,scope:o.scope,restricted:o.restricted,defaultColor:o.default,onChange:o.onChange,insertAfter:`${e}.${n.key}`}));Hooks.once("ready",(()=>{document.querySelector(":root").style.setProperty("--tah-background",getSetting("background")??"#00000000"),document.querySelector(":root").style.setProperty("--tah-button",getSetting("buttonBackgroundColor")??"#00000080"),document.querySelector(":root").style.setProperty("--tah-button-outline",getSetting("buttonBorderColor")??"#000000ff")}))}class GenericActionHandler{baseHandlers;constructor(e){this.baseHandler=e}buildGenericActions(e){this._buildConditions(e),this._buildUtilities(e)}_buildConditions(e){}_buildUtilities(e){e?this._buildSingleTokenUtilities(e):this._buildMultipleTokenUtilities()}_buildSingleTokenUtilities(e){const t=e.actor?.id,i=e.token?.id;if(!i)return;const n="utility",o=[],a="toggleCombat",s=canvas.tokens.placeables.find((e=>e.id===i)).inCombat?this.baseHandler.i18n("tokenActionHud.removeFromCombat"):this.baseHandler.i18n("tokenActionHud.addToCombat"),r=[n,t,i,a].join(this.baseHandler.delimiter),c={id:a,name:s,encodedValue:r,selected:!0};if(o.push(c),game.user.isGM){const e="toggleVisibility",a=canvas.tokens.placeables.find((e=>e.id===i)).document.hidden?this.baseHandler.i18n("tokenActionHud.makeVisible"):this.baseHandler.i18n("tokenActionHud.makeInvisible"),s=[n,t,i,e].join(this.baseHandler.delimiter),r={id:e,name:a,encodedValue:s,selected:!0};o.push(r)}const l={id:"token",type:"system"};this.baseHandler.addActionsToActionList(o,l)}_buildMultipleTokenUtilities(){const e="utility",t="multi",i="multi",n=canvas.tokens.controlled,o=[],a="toggleCombat",s=n.every((e=>e.inCombat))?this.baseHandler.i18n("tokenActionHud.removeFromCombat"):this.baseHandler.i18n("tokenActionHud.addToCombat"),r=[e,t,i,a].join(this.baseHandler.delimiter),c={id:a,name:s,encodedValue:r};if(o.push(c),game.user.isGM){const a="toggleVisibility",s=n.every((e=>!e.document.hidden))?this.baseHandler.i18n("tokenActionHud.makeVisible"):this.baseHandler.i18n("tokenActionHud.makeInvisible"),r=[e,t,i,a].join(this.baseHandler.delimiter),c={id:a,name:s,encodedValue:r};o.push(c)}const l={id:"token",type:"system"};this.baseHandler.addActionsToActionList(o,l)}}class CompendiumActionHandler{baseHandler;constructor(e){this.baseHandler=e,this.categoryManager=e.categoryManager}async buildCompendiumActions(){const e="compendium",t=this.categoryManager.getFlattenedSubcategories({type:e}).flatMap((e=>e.id));if(!t)return;const i=game.packs.filter((e=>["JournalEntry","Macro","RollTable","Playlist"].includes(e.documentName))).filter((e=>game.user.isGM||!e.private)).map((e=>e.metadata.id));for(const n of i){const i={id:n.replace(".","-"),type:e};if(t.includes(n.replace(".","-"))){const e=await this.getCompendiumActions(n);this.baseHandler.addActionsToActionList(e,i)}}}async getCompendiumActions(e){const t=await this.getCompendiumEntries(e),i=this.getCompendiumActionType(e);return t.map((t=>({id:t._id,name:t.name,encodedValue:[i,e,t._id].join(this.baseHandler.delimiter),img:this.baseHandler.getImage(t),selected:!0})))}async getCompendiumEntries(e){const t=game.packs.get(e);if(!t)return[];const i=t.index.size>0?t.index:await t.getIndex();if("Playlist"===t.documentName){return await this._getPlaylistEntries(t)}return i}async _getPlaylistEntries(e){return(await e.getContent()).reduce(((e,t)=>(t.sounds.forEach((i=>{e.push({_id:`${t._id}>${i._id}`,name:i.name})})),e)),[])}getCompendiumActionType(e){const t=game?.packs?.get(e);if(!t)return"";switch(t.documentName){case"Macro":return"compendiumMacro";case"Playlist":return"compendiumPlaylist";default:return"compendiumEntry"}}}class MacroActionHandler{baseHandler;constructor(e){this.baseHandler=e,this.categoryManager=e.categoryManager}async buildMacroActions(){const e="custom",t=this.categoryManager.getFlattenedSubcategories({type:e}).flatMap((e=>e.id));if(!t)return;const i=await this.getActions();for(const n of t){const t={id:n,type:e};this.baseHandler.addActionsToActionList(i,t)}}async getActions(){const e="macro";return game.macros.filter((e=>{const t=e.ownership;return t[game.userId]?t[game.userId]>0:t.default>0})).map((t=>({id:t.id,name:t.name,encodedValue:[e,t.id].join(this.baseHandler.delimiter),img:this.baseHandler.getImage(t),selected:!0})))}}class ActionHandler{i18n=e=>game.i18n.localize(e);furtherActionHandlers=[];delimiter="|";constructor(e){this.categoryManager=e,this.flattenedSubcategories=e.flattenedSubcategories,this.character=null,this.genericActionHandler=new GenericActionHandler(this),this.compendiumActionHandler=new CompendiumActionHandler(this),this.macroActionHandler=new MacroActionHandler(this),this.actionList=[],this.userActionList=[],this.savedUserActionList=[],this.savedActorActionList=[],this.displayIcons=getSetting("displayIcons")}resetActionHandler(){this.genericActionHandler=new GenericActionHandler(this),this.compendiumActionHandler=new CompendiumActionHandler(this),this.macroActionHandler=new MacroActionHandler(this),this.actionList=[],this.userActionList=[],this.savedUserActionList=[],this.savedActorActionList=[],this.displayIcons=getSetting("displayIcons")}async buildActionList(e){return Logger.debug("Building action list...",{character:e}),await this.categoryManager.resetCategoryManager(),this.character=e,this.savedUserActionList=await this.getSavedUserActionList(e),this.savedActorActionList=await this.getSavedActorActionList(e),this.actionList=await this.buildEmptyActionList(e),await this.categoryManager.flattenSubcategories(this.actionList),await Promise.all([this._buildSystemActions(e),this._buildGenericActions(e),this._buildCompendiumActions(),this._buildMacroActions()]),await this.buildFurtherActions(e),await this.categoryManager.saveDerivedSubcategories(),await this.setCharacterLimit(),await this.saveActorActionList(e),Logger.debug("Action list built",{actionList:this.actionList,character:e}),this.actionList}getSavedUserActionList(e){Logger.debug("Retrieving saved action list from user...",{character:e});const t=game.user.getFlag("token-action-hud-core","categories");if(!t)return[];const i=deepClone(t);return Logger.debug("Action list from user retrieved",{savedUserActionList:i,character:e}),i}getSavedActorActionList(e){Logger.debug("Retrieving saved action list from actor...",{character:e});const t=e?.actor;if(!t)return[];const i=t.getFlag("token-action-hud-core","categories");if(!i)return[];const n=deepClone(i);return Logger.debug("Action list from actor retrieved",{savedActorActionList:n,character:e}),n}buildEmptyActionList(e){Logger.debug("Building empty action list...",{character:e});let t="";getSetting("displayCharacterName")&&(t=e?.name??"Multiple");const i={hudTitle:t,tokenId:e?.token?.id??"multi",actorId:e?.actor?.id??"multi",categories:[]},n=this.savedUserActionList??game.user.getFlag("token-action-hud-core","default.categories");for(const e of n){i.categories.push(this.categoryManager.createCategory(e));const t=i.categories.length-1,n=i.categories[t],addSubcategories=(e,t)=>{if(t)for(const i of t)if(e.subcategories.push(this.categoryManager.createSubcategory(i)),i?.subcategories?.length){const t=e.subcategories.length-1,n=e.subcategories[t];addSubcategories(n,i.subcategories)}};addSubcategories(n,e.subcategories,e.nestId)}return Logger.debug("Empty action list built",{emptyActionList:i,character:e}),i}async _buildSystemActions(e){Logger.debug("Building system actions...",{character:e});const t=this.actionList.categories.filter((e=>e.subcategories)).flatMap((e=>e.subcategories.filter((e=>"system"===e.type)).flatMap((e=>e.id))));await this.buildSystemActions(e,t),Logger.debug("System actions built",{actionList:this.actionList,character:e})}async buildSystemActions(e,t){}_buildGenericActions(e){Logger.debug("Building generic actions...",{character:e}),this.genericActionHandler.buildGenericActions(e),Logger.debug("Generic actions built",{actionList:this.actionList,character:e})}async _buildCompendiumActions(){Logger.debug("Building compendium actions..."),await this.compendiumActionHandler.buildCompendiumActions(),Logger.debug("Compendium actions built",{actionList:this.actionList})}async _buildMacroActions(){Logger.debug("Building macro actions..."),await this.macroActionHandler.buildMacroActions(),Logger.debug("Macro actions built",{actionList:this.actionList})}async buildFurtherActions(e){this.furtherActionHandlers.forEach((t=>t.extendActionList(e)))}async getActionsAsTagifyEntries(e){if(!this.actionList)return;return(await getSubcategoryByNestId(this.actionList.categories,e)).actions.map((e=>this.toTagifyEntry(e)))}async getSelectedActionsAsTagifyEntries(e){if(!this.actionList)return;return(await getSubcategoryByNestId(this.actionList.categories,e)).actions.filter((e=>!0===e.selected)).map((e=>this.toTagifyEntry(e)))}async registerDefaultCategories(){}addSubcategoryInfo(e){const t=e?.id,i=e?.info;if(!t||!i)return;this.categoryManager.getFlattenedSubcategories(e).forEach((e=>{e.info1=i.info1,e.info2=i.info2,e.info3=i.info3}))}async addSubcategoryToActionList(e,t){const i=e?.id;if(!i)return;const n=this.categoryManager.getFlattenedSubcategories({...e,level:"subcategory"});if(n)for(const i of n){const n=`${i.nestId}_${t.id}`;if(this.categoryManager.getFlattenedSubcategories({...t,nestId:n}).length)continue;const o=this.categoryManager.createSubcategory({...t,nestId:n});i.subcategories.push(o),this.categoryManager.addToFlattenedSubcategories(o),this.categoryManager.addToDerivedSubcategories({...e,nestId:i.nestId},o)}}async addActionsToActionList(e,t){if(!e.length)return;if(!t?.id)return;const i=this.categoryManager.getFlattenedSubcategories(t);if(i)for(const t of i){const i=t.nestId,n=t.type,o=(await getSubcategoryByNestId(this.savedActorActionList,{nestId:i,type:n}))?.actions??[],a=[];for(const t of o){const i=e.find((e=>e.encodedValue===t.encodedValue));if(i){const e={...i,fullName:i.name,selected:t.selected??!0};a.push(e)}}for(const t of e){if(!o.find((e=>e.encodedValue===t.encodedValue))){const e={...t,fullName:t.name,selected:!0};a.push(e)}}t.actions=a}}async setCharacterLimit(){const e=this.categoryManager.getFlattenedSubcategories({level:"category"});for(const t of e){const e=t?.advancedCategoryOptions?.characterCount,i=this.categoryManager.getFlattenedSubcategories({nestId:t.nestId,level:"subcategory"});for(const t of i){const i=t.actions;if(0===i.length)continue;const n=t?.advancedCategoryOptions?.characterCount,o=n>=0?n:e;if((o||0===o)&&o>=0)for(const e of i)e.name.length<=o||(e.name=0!==o?e.name.split(" ").map((e=>e.slice(0,o))).join(" "):"")}}}async saveActorActionList(e){if(Logger.debug("Saving actor action list...",{character:e}),!e?.actor)return;const t=e.actor,i=deepClone(this.actionList.categories);await t.setFlag("token-action-hud-core","categories",i),Logger.debug("Actor action list saved",{actionList:this.actionList,character:e})}async saveActions(e,t){const i=await getSubcategoryByNestId(this.actionList.categories,t),n=i.actions,o=[];for(const t of e){const e=n.find((e=>e.encodedValue===t.id));if(e){const t={...e,selected:!0};o.push(t)}}for(const t of n){if(!e.find((e=>e.id===t.encodedValue))){const e={...t,selected:!1};o.push(e)}}i.actions=o,await this.saveActorActionList(this.character)}addFurtherActionHandler(e){Logger.debug("Adding further action handler...",{handler:e}),this.furtherActionHandlers.push(e)}toTagifyEntry(e){return{id:e.encodedValue,value:e.fullName,type:"action",level:"action"}}getImage(e,t=[]){t.push("icons/svg/mystery-man.svg");let i="";return this.displayIcons&&(i=e?.img??e?.icon??""),t.includes(i)?"":i}sortItems(e){return new Map([...e.entries()].sort(((e,t)=>e[1].sort.localeCompare(t[1].sort))))}sortItemsByName(e){return new Map([...e.entries()].sort(((e,t)=>e[1].name.localeCompare(t[1].name))))}}class ActionListExtender extends ActionHandler{constructor(e){super(e)}extendActionList(e){}}class ItemMacroActionListExtender extends ActionListExtender{constructor(e){super(e.categoryManager),this.actionHandler=e,this.categoryManager=e.categoryManager}static isModuleActive(e){const t=game.modules.get(e);return t&&t.active}extendActionList(e){if(!e)return;const t=e.token?.id,i=e.actor?.id;if(!i)return;const n=this.getActor(i,t).items.filter((e=>e.flags?.itemacro?.macro?.command));let o;if(o=ItemMacroActionListExtender.isModuleActive("midi-qol")?n.filter(this.isUnsupportedByMidiQoL).map((e=>e.id)):n.map((e=>e.id)),!o)return;if(0===o.length)return;const a=getSetting("itemMacro");if("original"===a)return;const s="itemMacro"===a;this.categoryManager.flattenedSubcategories.forEach((e=>{this.addSubcategoryActions(o,e,s)}))}addSubcategoryActions(e,t,i){if(!t?.actions?.length)return;const n=[];t.actions.forEach((t=>{if(!e.includes(t.id))return;const o=this.createItemMacroAction(t,i);i||n.push(o)})),this.addActionsToSubcategory(t,n)}createItemMacroAction(e,t){const i=t?e:{},n=e.encodedValue.substr(e.encodedValue.indexOf(this.delimiter));return i.encodedValue="itemMacro"+n,i.id=e.id,i.name=`(M) ${e.name}`,i.img=e.img,i.icon1=e.icon1,i.icon2=e.icon2,i.icon3=e.icon3,i.info1=e.info1,i.info2=e.info2,i.info3=e.info3,i.selected=e.selected,i}addActionsToSubcategory(e,t){t.forEach((t=>{const i=e.actions.findIndex((e=>e.id===t.id))+1;e.actions.splice(i,0,t)}))}isUnsupportedByMidiQoL(e){return!e.getFlag("midi-qol","onUseMacroName")}getActor(e,t){let i=null;return t&&(i=canvas.tokens.placeables.find((e=>e.id===t))),i?i.actor:game.actors.get(e)}}class RollHandler{preRollHandlers=[];i18n=e=>game.i18n.localize(e);getActor(e,t){let i=null;return t&&(i=canvas.tokens.placeables.find((e=>e.id===t))),i?i.actor:game.actors.get(e)}getItem(e,t){return e.items.get(t)}getToken(e){return canvas.tokens.placeables.find((t=>t.id===e))}throwInvalidValueErr(e){throw new Error(`Error handling button click: ${e}`)}async handleActionEvent(e,t){Logger.debug(`Handling event for action [${t}]`,{event:e}),this.registerKeyPresses(e);let i=!1;this.preRollHandlers.forEach((n=>{i||(i=n.prehandleActionEvent(e,t))})),i||(this._isMultiGenericAction(t)?await this._doMultiGenericAction(t):this.doHandleActionEvent(e,t))}doHandleActionEvent(e,t){}addPreRollHandler(e){Logger.debug(`Adding pre-roll handler ${e.constructor.name}`),this.preRollHandlers.push(e)}registerKeyPresses(e){this.rightClick=this.isRightClick(e),this.ctrl=this.isCtrl(e),this.alt=this.isAlt(e),this.shift=this.isShift(e)}doRenderItem(e,t,i){const n=this.getActor(e,t);this.getItem(n,i).sheet.render(!0)}isRenderItem(){return getSetting("renderItemOnRightClick")&&this.rightClick&&!(this.alt||this.ctrl||this.shift)}isRightClick(e){return 2===e?.originalEvent?.button}isAlt(e){return game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.ALT)}isCtrl(e){return game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.CONTROL)}isShift(e){return game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.SHIFT)}_isMultiGenericAction(e){const t=e.split("|"),i=t[0],n=t[3];return"utility"===i&&n.includes("toggle")}async _doMultiGenericAction(e){const t=e.split("|")[3];"toggleVisibility"===t&&await canvas.tokens.controlled[0].toggleVisibility(),"toggleCombat"===t&&await canvas.tokens.controlled[0].toggleCombat(),Hooks.callAll("forceUpdateTokenActionHud")}}class PreRollHandler extends RollHandler{prehandleActionEvent(e,t){return!1}}class CompendiumMacroPreHandler extends PreRollHandler{prehandleActionEvent(e,t){const i=game.tokenActionHud.actionHandler.delimiter,n=t.split(i);if(n.length<2)return!1;let o=null,a=null,s=null;if(2===n.length&&(o=n[0],s=n[1]),3===n.length&&(o=n[0],a=n[1],s=n[2]),!["compendiumEntry","compendiumMacro","compendiumPlaylist","macro"].includes(o))return!1;switch(o){case"compendiumEntry":this.handleCompendium(a,s);break;case"compendiumMacro":this.handleMacroCompendium(a,s);break;case"compendiumPlaylist":this.handlePlaylistCompendium(a,s);break;case"macro":this.handleMacro(s);break;default:return!1}return!0}handleCompendium(e,t){game.packs.get(e).getDocument(t).then((e=>e.sheet.render(!0)))}handleMacroCompendium(e,t){game.packs.get(e).getDocument(t).then((e=>e.execute()))}async handlePlaylistCompendium(e,t){const i=game.packs.get(e),n=t.split(">"),o=n[0],a=n[1],s=(await i.getDocument(o)).sounds.find((e=>e._id===a));AudioHelper.play({src:s.path},{})}handleMacro(e){game.macros.find((t=>t.id===e)).execute()}}class ItemMacroPreRollHandler extends PreRollHandler{prehandleActionEvent(e,t){this.registerKeyPresses(e);const i=t.split("|");if(4!==i.length)return!1;const n=i[0],o=i[1],a=i[2],s=i[3];return"itemMacro"===n&&(this.isRenderItem()?(this.doRenderItem(o,a,s),!0):this._tryExecuteItemMacro(e,o,a,s))}_tryExecuteItemMacro(e,t,i,n){const o=super.getActor(t,i),a=super.getItem(o,n);try{a.executeMacro()}catch(e){return Logger.error("ItemMacro error: ",e),!1}return!0}}class SystemManager{i18n=e=>game.i18n.localize(e);namespace="token-action-hud-core";doGetCategoryManager(){}doGetActionHandler(){}doGetRollHandler(e){}getAvailableRollHandlers(){}doRegisterSettings(e){}async doRegisterDefaultFlags(){}async registerDefaultFlags(){await game.user.unsetFlag(this.namespace,"default"),await this.doRegisterDefaultFlags()}async getActionHandler(e){const t=this.doGetActionHandler(e);return this.addActionExtenders(t),t}async getCompendiumActionHandler(e){return new CompendiumActionHandler(this.categoryManager)}addActionExtenders(e){SystemManager.isModuleActive("itemacro")&&e.addFurtherActionHandler(new ItemMacroActionListExtender(e))}async getCategoryManager(e){const t=this.doGetCategoryManager(e);return await t.init(),t}getRollHandler(){let e=getSetting("rollHandler");"core"===e||SystemManager.isModuleActive(e)||(Logger.error(e,this.i18n("tokenActionHud.handlerNotFound")),e="core",setSetting("rollHandler",e));const t=this.doGetRollHandler(e);return this.addPreHandlers(t),t}addPreHandlers(e){e.addPreRollHandler(new CompendiumMacroPreHandler),SystemManager.isModuleActive("itemacro")&&e.addPreRollHandler(new ItemMacroPreRollHandler)}registerSettings(){const e=this.getAvailableRollHandlers();registerSettings(this.namespace,this,e)}static addHandler(e,t){if(SystemManager.isModuleActive(t)){const i=SystemManager.getModuleTitle(t);mergeObject(e,{[t]:i})}}static isModuleActive(e){const t=game.modules.get(e);return t&&t.active}static getModuleTitle(e){return game.modules.get(e)?.title??""}}export{ActionHandler,ActionListExtender,CategoryManager,CategoryResizer,CompendiumActionHandler,CompendiumMacroPreHandler,GenericActionHandler,ItemMacroActionListExtender,ItemMacroPreRollHandler,Logger,MacroActionHandler,PreRollHandler,RollHandler,SystemManager,TagDialog,TagDialogHelper,TokenActionHud,checkAllow,getModuleVersionParts,getSetting,getSubcategories,getSubcategoryByNestId,initColorSettings,registerHandlebars,registerSettings,setSetting,switchCSS};
